let s = 30000 //等待延迟30s
const $ = new Env("jckd")
//const notify = $.isNode() ? require('./sendNotify') : '';
let ReadArr = [], readscore = 0;
let YouthBody = ["p=I1HH-fn083Io%3DMU9bbDOU5wUpeKOKJBGDpcsEVPMwmG0hjafq7lTwSQEuIprw7Oy3BnaiC46WEWM5MfuPIQl_v2OYCwT3_-QGhvrFYWz2xG0QVU9wml4J-5OD_8omucpvpEgfoY4KcRqGZgNdztnG0XpEOOgzPbl5axc02ASBIv_oNnL2A4pjjw2pitWML35VV2A5fCD2QHnXymvb1ArRpTbPNNHFYzTzoUlktoLkunlouGwsHkoAHSMXmjIsTpuTBCnf-NMji_5lN-rJVG1I487hzHRDq-_TxhrbVx_KEKRMc5FDTvApc3Tv21-qbuWqN1U7g4I4L1sgKJlAIjz7SYr8k_LqnuauhpEk0YN1EaxlS8POyZH8VbGrSG4TdAAJo2bEckaoTuBh4NHbT_bBLtvcDGBfdxWKODb7Xjm3spE9TZz0kMUh_9N33p0KVYdHcQIw6ZCqGj05qfla_StvycXzGXSpjVjBjXy7Jz1PRUlXiTol2iBzCWdR2HF4qFivRbd0vopHSwX3C7D9bBjsf6tNls3f74jLNpbAPs32Z9Gho70V4dCR8BdGdBvO6uE4GWJRLFFtuQC7CSMUQFGf9izmAlOYPfRBUC3OxIv3FDJXIRbnwkdL8K4nD3I-Se-4x8DvU5HvBFanU43nCri7dCsWxirPtwTiOmYkCCVOrcc5vVm1JOwwh_Ypx656mXfwFa09MtfNjBQYudDYzDFbwgDeMvHYDXI70BpjhT94qFiFl2YhJr8D_jTEpOm1e6jAKvoupwLPqQbHCWag-a2tHdO6KA5M7iMLgGL4OW45kiXPYZPMNq18K1vFLZSBN7VvggQyrN5qPytG_LzrcQFu8SmBYSmKjYPkC0Q4YASmQTzrzC9fCUrEtARThm5ZCowabwrNmaHlwm4GbCRqjb4vLLZDe0h_Q9Xgcv3B-nq78xi3zQWix35RmctCQr2Dv38XyOShWFbRBIjFjGJ7wqe1bERDgwyzRuimy5zhY_LK8No-RoHi4BJaYjOksTMclpQx5uC6_PIiWx3WLiJQB_mCbtdW8e6big-EK61Fchx1AT_cFPLUUjjnS0vsvRbC1wbh9s_llqkwiGe_F7ToptVYtHqQnBaJAyUzM8OUwk1SOwQytEqezVP_9QaySvkIilDLflcJworQMUD0qZ0ktINGnPd7tFzon0sUPvEtQGo5yvRihGy8b732YVUmBG42wx3h2lLrk6__h_-B","p=NCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9Hee_MUCH1RZw85pPilYWKtanNVcNhIHP1tt5ecyP3qsHcIR9nYTGUH32qUlxcipY8fl2iicLCNRa9CkUF9cdr2jWzGJcMWo8cZN4rabU6mBjwZmSRjNm_Ed3cmrreTk7SFRJGsJndOgMqLqb5FSAHADdrKeB3XjBl_1Q5mfeWwcVEawXkiwawL5LOIPqQFOcGiTaxwmqrA-emjATsJK_FSEVp49MeB6RXrr-cSj6mo3uw3ozWs1N1FgfT7XmGuy6-dtVsOTAX5-hA5dPWexo_mA0Jz6DdnDJqZNiioi3YvNt6o5dxg2dIQBy2OIiqhokaZXz4fWdSr0c8zG-yHzpNUA7428xPkwGSTcvJrBKbQcA8wEioNe6orxESRCAD9oLOjuKBT0bhhJyhOw4ZoO7zh6tGKa9ZNqG8qIizZd3htLvWKK_RyBnGCNEWQ1fi3mW32q-53-B02V7WFlSTGIvAm7kNo3huypY-lo2-fpuGgnBuk5a82mvB4HCwGP2-tECixzEv_31GWwl5D1aBcxvhPFExS43a3EzJHiNTm5pMePXrrwqucM39-o7NgN_KgUNDnbLoMtf9xY8wSY837t-II2cSaORC-dHo82Ca4eh7PkaGVULSNxG_z0p1-1GinoTEXEH3F6H1PIsypiIpHO6jNGo31CBt6rzcR2kh0QZ9WNxogOJaEJ9jQGLdsagPUT7_utc-wod2WyRnmQmf93nYXzk9WzxzKvWxSoJjlPuX7V5new95_V2BPmqrbg6P_S2aYdmVLZTnObP2m0KTxWJ4pb-3geHGsXGZI3ARUGVJgc7in-OF1JaRbJIV1ZIx0vQLm3sfOyTuZFlVNRChqqP4NE6k04tptY8tTKOWH1sbawVLp2B1ayoYTZ_2SHLdTBJxWNYElr80P6PpOBgyHhJY7qp_46IkTV-y49ASWxu6ulUNI65","p=u7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieT2I48eEfxImAuYtRHnXcpXjKmY7guUWgT2QSk1Hm5t320NIz7WHnz0XUmZfIalmsQrnGqrlEH4ycjNMekke61068hqYS-64XGMLfMnuHMeyMtzI644ozg6jx5vxPmyoKn8SfRddtjot0bqqkWNnaTM2DQ6hnjiXYIgSsx3Mvt-ef3jrYHNt696orWqhYeboQVPTSNFl2Le9VTfm_wMAwiCU09Py5IXm7tgN8zpVGiQj1R0OixxBaxG6K2Aeucy-dJB6g7r6YF61xP7qkHxubd5MncbgYa-y8lzpN9QGVv9oM0aknDuzBPgCRjhVbrmx13yo5b7i91VQqawf9_SnVBVHua2wDEFo5dz-DSR6uHF-X_75K7pnWnKejX9hM9Bye1og6xvBNM7w_7jmSuZEE8h8-lbnD4XhDtKP7ydqvtDYxKnpPcpDQgrtfdTu0C9xabrpV2ygprQs3-RflrZE2oFJbYk1RnV-VrVTwEG_6EccE1jJVlMUIhMyWTUmG1nhOfGL6EWh6tobmkUWkM7pjWKnHgfO7C301cPOQbwfzEdjT7f8TGjg2HMO03oJ1v7FQePoOZ5Opgi_AiDkv_qY0TQKM2xtaSuIGdFvLo7NPvPRESyejtmfxe5FD34B5J8uhEKhVP-hkJmRf9xOCRShnKJjhZJoxqcjOaNSedhJIea-xeDW9MVemtdBFhol6r3kZ0NXixXjwSJ5Gu-be8pFuo6wGKxBsPK1bHLpXSUo_2A5y-PnR_2XUwK-CvQvDNlCvz7Cti6NqIsWsxPBxnVLj6FwW9FW6FCBfLIvyp99Eh2spANHUtX5btioIENjBHPFsKOcub2yxvNSzKJROdoTHfGyDpKu6mGrlmpY_2xOQFHS98vZ7e3SSoQ_XSq86yDQiTyUknnbpaF0fHqQTn1PYYrAzCJ-rExj6GQbpXwlIAnvpA","p=mqH-4Ui0XDPM%3DWFJFCIQCB8W5gKiwJCEqlDeq0YjbEsiQIrx0-_VW-1dL_R8OIzxE0-ynasIaNTfEmqFjob2VoOaE0I3ehxwe5XL8w0mVb2W0POcCQqJXJACAJHCUR76_nAAeHIJM3trAJbLijU_vpTPwBUa08es67xjszA3sD7rhmH_3AwogYs995IX82ZwpaFXWWG2y5_4SM8TVnacPy8CsQ6vU_kYclz2iH4NIE031Q5Zjg9k4FJDCEEADGhmqAdl_MMUMDDAgS5IPVvFO3r4K8jHXFiSFS6h8yhM9SrQVN2sLKxs81_u6j-KJZQx05zbi4KHBbN7FqFF_pN0DaipgL6q-ZKopX5j4i7ze_LnqhF-cu-_rNsfg1d1mgDQbsXszqBAxMt-WUzdwsBUcnDXiXksZkIBfOMohmSlIRYElNfxw_4ip3ohwywvxHlZ1PneDhq0XZeXjWTQ0GuRm8-xL7iCikLdy2_O7la7QCcST-zVweLTGL8w4pOKmFfWDDRftqvkrrwlrzlvUDox1YyXGxRuX_Yn0tMItuDisocuGKt1YelnuAUqFyFKk1G2sh_A_XYRYPWucs-Z6J7l-J1Ah1boc-UiIn25Yjl6tZ767hwKFCrFwUPaBzBBlBc5yE8gXuI6MM0-J-aJ19MGkRQ91Eu7fbcViGJqG3p2xG-8FjFIJMRckrGag2Y1GG1aqMFnVJim9nvhVTHnBZQUi4FS6yemmYj2H69ryPtbk2KIk7NQSQdsi6RIehMjGSieR7gCMlAK2pl2ZsvUGQbGT0oHvSNW1wtFHvzTWxa6x8_uOjdcfxd89sIpgx7K3LJxzzaTZy34JjEPl5Lm7XVRMVn9nHXN5EUsEGjGf9nsQKHck8_MJHGwdqB-C3J2IKrxS6ujqGTduepv_apdi48WXjw60mB2zayM_vH6O4CZTIDwux3YOo1wsRuyi5mFKBA2FoIpv-MU-dpOiBrRaci8r417QZNdrcH14da50S9BCLD-KqCF9F7HRvW9kOfJslT30FZBaE6V0rXiiQljXNKKPuejyD4TjGqRyQIbYkxAntFypM7m9L1uSzTologOQ5kK22WfVnkCBJi4lau2NPb9F9KW6s6Bk1AoPOKttRK7hjcrSL9Cf01deJCzqQihUPNm1H7odG8K3jHf6n1GXYXsZG5-i_e-3R6toCD1VJCUPKKRNfls0VO26OQ1VAJd3WP2iIm7DVmX5D-hZ","p=wqH-4Ui0XDPM%3DWFJFCIQCB8W5gKiwJCEqlDeq0YjbEsiQIrx0-_VW-1dL_R8OIzxE0-ynasIaNTfEmqFjob2VoOaE0I3ehxwe5XL8w0mVb2W0POcCQqJXJACAJHCUR76_nAAeHIJM3trAJbLijU_vpTPwBUa08es67xjszA3sD7rhmH_3AwogYs995IX82ZwpaFXWWG2y5_4SM8TVnacPy8CsQ6vU_kYclz2iH4NIE031Q5Zjg9k4FJDCEEADGhmqAdl_MMUMDDAgS5IPVvFO3r4K8jHXFiSFSwgvbpxDvFjJjhnAFhnWpwtxKZx5BIIz31wPh2Q3VDkMI36yNuU_KnQ4zN7tB85D-eXXpf9ua3nBrsGRdwwxTo2jitKg0juXzENvl-pSdVGzDZyF3S2p6Rq9vBXtOf1WxiqBBmh8sxtggK4ooGMGdBmyzV_Fy4tlOevRE7kIKpni8eMrQu9pc1cihHXCsr2eWABl5HPyWG64HIfno6xA2A3lhzeTf-LJuArojRtMD_9mLN3GMBDJ1vb8efPsKhAJNhemgOGkP8Vt121BDbK9Xr_iVunyB84dRDs0aqssvPca83zUKmWfxYD7A9Br2iqdj50PQR-E272xfBrLPRYRm-4nSsQWLPa2jxBBqwE6PwF5mgmWHUmH0gjL_z8AXfulufmdFlB8_p2VEBWo1gEbvaVMcx_3v_6MhgDT-5C4nuk-JbUeBHDDo2xBO0DyHwdiX5yX_JS8K5iW4_WA11HE6sIC9PWRlUx-vviu8YuBjrd9Z5N_lr7INGsr-zxKiOVa0qGlLRUOzvIMzWw3y1eKQeIDMFEbVufMl0pzXtF6N3qDU6s7L5EcwDPVxCpW3CC-PRaKTZop3KfNCdIXYKHHE8KPvXUr_9uYag6QWVSxvlriqF-sUWOFmRI80HA-QUUhKvMcUmc0AampXEkbn9tAbuFd0_-sgK4TsDJj6rtM_9EzPtG9s4cP0DhUuQ_pnB1YM4MZpvwxao2xhlYaXD1dPoSU7APgLAUKeB2JN8XIV3EFjby21RXBsq0JmALU8z6AuCIzFPnRPMd_kBfP8bUeKuZVsx6J8nPZkl9_wRVJKl__Fw--ONIqcdEkhUK0fwsSM_UNIhMhq_rcqTsH-1ZADgeETHva3DOUlAP39x_n7h0SWLon93SZ6n42PNZM1ro8TFcvdDfo1nafMzPYA7lnP0Rt18MZLfdIAB0pToOunFPx","p=S1HH-fn083Io%3DMU9bbDOU5wUpeKOKJBGDpcsEVPMwmG0hjafq7lTwSQEuIprw7Oy3BnaiC46WEWM5MfuPIQl_v2OYCwT3_-QGhvrFYWz2xG0QVU9wml4J-5OD_8omucpvpEgfoY4KcRqGZgNdztnG0XpEOOgzPbl5axc02ASBIv_oNnL2A4pjjw2pitWML35VV2A5fCD2QHnXymvb1ArRpTbPNNHFYzTzoUlktoLkunlouGwsHkoAHSMXmjIsTpuTBCnf-NMji_5lN-rJVG1I487hzHRDq-_Txszm-SEP5yEQIi5xq6nIZ__IcfskJD0_Yq88W1M_O0JFLUrfyEcZ7d_OdqjBQC6Tib1mJxUoLgOvWM12Xga7qsed14dlTm-pGEBag8hqrsuX--_HzgK3ThWVksxWnt9t8r5-E_rX6vIlk3UojGZMmiTV3UfLokjfQLszp8UOtoTVGUtJvVBmgXMmADICAZKyI0Pl63Si-pOr4NeTr7Sef0JvfGvKZfl4vuYfIxLjutw90cxX4fA9b3UMEcM7HKHQPZa66BbC63PFuUyGhN7JYb0vF1ltg6Jv22KM9ZhESHvq8GLBFqtFEEE_yNywBBiUd-M3bGt6BTdyPguKIN-ithAogCNu_4Tm14EN1gm7JMrSAoR1voXgydWRinacAephefcrzzRVvVuALXtsPAnkMGpdj5VwLHy6Fv3ouVzX_iicry0zJhgVjMJyT6NmjY0VKtRAjJ_HWgKe2Woh_pBoLG0uXrVx_ONuo8LLi1FhfNxbYmf-dyAMTQV-yEXDl_FTpny9BrqQpOP-zISwDav4UyclwnQgcrD2r2djnC8IFU2gNhbi_2eoOnrkpWgTbiEF2XXWViAVqBHx1_vFKmPSCRWNWh6qHdeBzmg2s_N8vUuZrXzTgqau06l4AIXvtnFUz6Frl-jPGjWtgLq1eCx9f7Sc-9CFcSyeByP0QVGMODisxmq-vIJf8B3Qe-fhPLlJKtqF8_iLTReNx5ki0BK-CNBjqxle1oBZJ308O3JXj4Fo8GD_FpD3Z9dCc1w0cOj0MAhf5xhw3a2tJNYF8OtgO52FGyb4F2Qo9OCuys61-_Q56rcrbFk7j8MQCGilBEMVcLXtzIyzPKxHb3kzOfy5LWNVP3n5IxpPxmFs898QUI0IDf32iqnZvl0HHeA-U-ZzLFELR1TpAkWSggAYamL013Fjo715IPZStON1Hv7pL95v","p=jMIr0L3CWXKI%3DdjuFUVYbIhBZ4H7LKciK4Yopvbj_OiKyTYjsmjZ1N7vd4Ej_9dtVvsJTAeswIhG61vuaSwXATR0drweeDmWLyyGzsQuW8PyH6H3J5mj85XpZ1OY-Vs6xkHzcd2454IALxWcviJH_ZuzLOvqNNKed7dP17VXfcfOmY1enzFrxStr91CkO3Vu3noTqyXzF_ZxKnQXkFL03ZnKm6tQWpYz_CUvA4DroesYR1x1aCgd5Sh7mfj_EyYb7iaYhCEnUNxltKSn6dCR_gFe2MOiTao1G4QuukF9UDcBl2z2BdESe1o0OUko3hpDv40dllnyL8h4HUsFtdcrLbVEc92doz2Bp0NyheOKJwo_-PWbIz60gbsX3mIbb2r3FDswhVpPt8PYWcxaXe-rrondDWYaXadK7ok91Uxjl9mlRYaZsizQYpOk_eO8252Nz7XX_LYFpbxgtfPWz-0QW1BCcUFMiq5f--1Ya_Gt4pwRaW8vs43IvYVBxayZFP-mMSKDJVjMZHa5PR7_k3LgE7IzedU8lvu2vBW2CNArgpCTxmSjcEpSd6mvUvyrYKTRJO0q7AXx7Y9zVjNyq8i_J42rrI2hsKt55rZGp9HuGB75VKUmDBtapucBTI4NArcAwDRlNGQ0mh3cO--pYbLqxdg2zLHqHG-NI1_G4RdHCk9jYR_uYOfXRyYg7U__lzycPuLAgQ3McD26RLKzrsXz4NX50yjNSlzDm5WU03dT0cZ1HIuruSb6dF6MRQySzDsM9xLX5_4ANevWdH3jC7-t4Wkehz6kw5QrXzxq4k6rPFLRPFcxZSUVjx1ogqX8R143EEG5x78lYSy1PfyDkroBzd-PZHjFxSYOCXhpOtwm-NkahXpFWVMUxw-UbBJZiRWBQLoM3MuRdryhHqjdx6u-w0lt_Zn7MOB_MY62FBIJYzVTdpcSVGq_Kza848Y3bKDvXFdxJsI8PqDMmYglZVISFVB5tK6HKyvOdk6QEoAR74u4cGsfsR419QR2yRStx11RJ8qQMQ_6Zd7fynjrRiNxKAS-F1KOBrs4AU_Q-YZVG0b6Jb-KPE-147TxTvWMCLEurKRqLU7m7FbUVU8R9PubCy9mh2mONZPk7N1lhRnuwEIEee1XnrZqGKDiKQUMmVlw0gJDVTJIc74RUjqMDgZYQUvQIF-Yo3D3vFjvMhu5t8DVybKwPCHnj6LSn_9ujuRvLSQzRcuWcEfaP","p=Q6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05Bt83MoI_XDTisCF3hOMcgwHwYARRqw-Thw5zLk-mmoIHeR65_4ETMt_99R5S19DTZE6HkSj89XW5RUuR1gNId6WihnLNQEGyDg8p-s1laJDolA0bfKw4bt1eeIBOASLs4a6zSUkhEnwus2Dj_jAHy1Tz8nTBrIKFuWAzwwgntGWbR-hjhe-rGLYCxa0c07zoD19eK4XAGJz_S7WLbB7vvuQL2gT__763dNWGFv72vGPzcKow8FCsHyroCMbvgDsEtVwSQAUGwkQ31toaLH5UmC-39Ty4uLHwkgP7wr3skQ7VWPnZpPL5g92-774ZZrWWc0SEpNlT9flfpVinPjE3UBBtub2hQYr-Yq0tq3WMtY-cxd5iYgEE-PmEyhevqAnrUjdCWtVkb2KMgyzRc4BDx1-ltR8MY9sgeKKk2G-A00X2iVU_4fSukzop60SmPv2D7ZJjWrwPEuPa9Z3bxnvccIfIHUVFac10_zde6gFvrQpPQ-OyaI2h4S2Hztww7xHY39OVd4sKJyTpYOHR_BV-3DRBy6xJ4aFpQ_tiGeCE8B_vawLETSw8WhS7Q07DkSQjgf9SZ08OV_N2a95p3i9HJXoW1YrnZ5FhPF6OEWgaRfL7T5oEt-gY8cYsSqgDCJzRyIEiyGQiexuxNt4KzW4Ad04KpFGw3pxqMmYKYW9AHrtC6BBNKC2nch7-A9Z9pMl4JKj5uQ6-Py-wIBAQBomefvgoUewy4K8pUOE19fNcOOiwiLJCiTIw7IVGZjHwz4jgWnoyygd9mXu-YNH5BJ2HzwbdgfL3AUx8QAUZ8uW55_xE1QX5ZwZJJ5WcR7Cwe-mmetSH9jzSglFMLwXvYH_YLH4rorNrzyClOHzkt9rt0hIf9E-sPDMtp1zLM1ADp3dsmgSUwrMPEt3Y92zAcg1NDA_TbGRKI9qNmiCvEtcXcEcvPm","p=e6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05Bt83MoI_XDTisCF3hOMcgwHwYARRqw-Thw5zLk-mmoIHeR65_4ETMt_99R5S19DTZE6HkSj89XW5RUuR1gNId6WihnLNQEGyDg8p-s1laJDolA0bfKw4bt1eeIBOASLs4a6zSUkhEnwus2Dj_jAHy1Tz8nTBrIKFuWAzwwgntGWbR-hjhe-rGLYCxa0c07zoD19eK4XAGJz_S7WLbB7vvuQL2gT__763dNWGFv72vGPzcKow8FCsHyroCMbvgDsEtVwSQAUGwkQ31toaLH5UmC-39Ty4uLHwkgP7wr3skQ7VWPnZpPL5g92-774ZZrWWc0SEpNlT9flfpVinPjE3UBBtub2hQYr-Yq0tq3WMtY-cxpm0ooqBTS4ret9LUivVsRTvR40Q9bw0w-fjdMwkjXaA6iG4NV8cjlOLa91O2umn7rBdGkUU5USE_JNuSk4hTB979JdfUkHFpyzR4lMaBBMFGL_Z-KpeBYhInI2oSXcxWhe5VmVPWWGwRm-x_8nswdqGmko2DXJm-6gwsLovrpOyOYDxC89SXnxiSbaiQrv0h4YtKDy_mPcKjlCL4835iBW8BE5W1Evaf0YWmI5s6ogyCpya83TODOcUBOsc0hWEdwlFKPcziWJ3T4fTSbWMNuBkcgOwwOMY2YBSVZ_ozPos7MZGIRLabX7dGgkhu1qcnB5kjRhJ_hWKjDMOpOc02vwwPk0i4BKyDVUaTTGya0dDAfm2_Ov5busQ9qIyNGM9RUSa2yb9lDVB88fJRarNrrPPHqeUNk78DromfN-jd1jAxdgfEQEXEVjN6THRI2srIJO8e9YEL4Kcvso-O033C0X5WMlmMvYYgZpCEt6ganys7Gh4lBMb-Bt7vh64w3nX6qtROdteXek35kWz2yjMq5FsNu67abeeLcHRrCfK2VmYsfAwJrG3-iMwwfh-uW0qyh","p=G6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05Btw2TRQPx7XjL8DQXPu45d3gWSpPVjiBxoD0ISmS_w2YTeHlloRCvqyzKSRzoha0TmXRUa8se8kJbSH5nkbvvRurl05HFALxv39ijqXiDGKI8cllwSsgX0Neninek9Bb1SzI57eY_iLdLuEEkOBNsWyjSO_7kS6KE1pKaErfEX8N768cJ3up3pSHUpBnDImsYscvWouPkUjhPyUMJ5ruKrds_6zm_NwBV3YIqyrG0jMNUjlOjsKpbWT4jm-4jUy3LRlJbmupsLe0EOs_fLP1gcNmeBQQhYzVPfRiBzySC9YpUvGiXD7GxpywRAswaG4NSzBYIKsuZ__vHyki1pUuMKM3x1na_NeFvzx82Qm2M8jZsBlzU7evnjg9BYFmHt2_i_6ZJ8r6ubZtuxpCPd163oxWbjZccsRUIEIppD88glXQdmCkZq7wOnDx3KAdoUim2KRvKJfJRMY7saASUp49IlOgjSxvbHy8lYvWlXoIxPigzAYgMePHWnQB01AXbjWrLb2NeRITJwd0zG4_gX87aFQSNm3sq4UdhM_DapKZHYZKHS74YToVaEWaV12WRpvUu-1UotNSwRGAc0rXrjj21UkzQGSJ2kkUyTPFRZ4Bbfh6NOnYzDdHpdrriHQGpOdsnTgbGIyOIP-9lplw8VuARZ6nqsBiccVEvV-bEGiAL1T_ZANqZeMkGfC5NxtMMDx2LkFlD8SdtBGp-U3cNBCur9o7zJbw9Pt_NqzqBpLxIRmzFYjq8Nq4G8ieAzbFjopLU1SuQ4N5cj0shCfUCFFMRGpMuo8sT3VreDS28Zpnr6NcNSljFj4RRssNlJbnnP6zBmhQxUeSCTBQVYiyalhqTAQlVQee22ICaA2UUcmXrs--uBy0u36EBQAMwSmvZbGCMAsxrsqlTpNQTdbzszwlArXRBdJDBmyxcrZv1mtmZylCkt","p=G6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05BtymXfAr56qkz8JyZOKjkIe8goFwap8y--5OzRqdHBU5F-QcIEedt63_gwObllKlrUzuSDHkA3ZT7wxC7L--VAURIq2rR5CiKPweVesQblAkk4xmobyxvGje-DBCI1co2QFEs3b9Io4XqX7diBJEVk3M5Gp7ZOa3WqoeSQOUDtikclr_7grJE8Z_fVvAlVFYX9ACt8kDeHz_YLRFwWo6PtdIPs7aAzU5h0oOpmkoRamihOXm3-4tLT9-KIHFGKdM9WrUGdSkh4y2TO7P5xFse9wGKYXRTDsE27A8OROw6kd03YkyxsQbmJ7wD53xO8rdfanTkRfzgdNvJBXZmlxBfx30rzvngrv3_RWebTJPgcn8a0StHgj58lBS9OkmAfidcNkZNa_guJIkwDy_9eyXjSh_xN9eh9AZv8EjUpJVzaQ2qSg0DF5ai_hfQv9e4i2UthAiwcT-locO2p7IIvxlF5g5hMsEOrXpjLl3ERUq8xjgv_WAfGbeOMowfPl8VPlkDBSy-pEeCu5k_hNJjZ9BlXn17Ux3OXkB4H7s35yr1m6TOG4gM6vOajYyXiUvvaHzHoCF1iTrtCNm5VaDbH0uEUDU5xL5Tz-IiVIm6D4ecbXEMXFpZyQR8lrezOdcGx-XH-AlY2WxndYLoV4GthtMaInhSY6j9AdhT_JjSpwDJ7OMc-uh4oYYR69pKtNcr_0n3DFEEzUyWMsutB0whRQIR7en9szjpN3A7AWX-SEDsC-1gJCtzlljzYQyAoWJXPhEIQphpL2gjlgW0zUikh28BAeMbBvF3WA6M60mu3X4APYjlOs-Jc4_oJQh6pMdVAWJKs1he02uKCQD_Ez43b9eMJN9guMxGlXW_uwiBCgKxbvNgMBq4mFXRkT2Apsr_7OEYAC-y7Y2qwSMeUajfXoBTTYJUF3EeEKoknCK4btwTLSu9q","p=tMIr0L3CWXKI%3DdjuFUVYbIhBZ4H7LKciK4Yopvbj_OiKyTYjsmjZ1N7vd4Ej_9dtVvsJTAeswIhG61vuaSwXATR0drweeDmWLyyGzsQuW8PyH6H3J5mj85XpZ1OY-Vs6xkHzcd2454IALxWcviJH_ZuzLOvqNNKed7dP17VXfcfOmY1enzFrxStr91CkO3Vu3noTqyXzF_ZxKnQXkFL03ZnKm6tQWpYz_CUvA4DroesYR1x1aCgd5Sh7mfj_EyYb7iaYhCEnUNxltKSn6dCR_gFe2MOiTao1G4ecdK5FQhktUisIqqs1Ahkvt1x2Xon6oJMGuwIDU3ok1caiUv5x4_1d_eWFXprRLRmn44_n_LRj3EjKpNORIGoZBgeOiQMvN0QRiDsaf0UIcecCEOmrO4vLzcnYI231yIZ7lf10N2l_Sg3PHFmzaiRtT2LmytBrINEUsT6UYQEtTQUqSBvYgoEXq0mpZR0ygQeozBHvcb-ikFVNACxgpFIPozVKrbzljuSZ2axDAnbtQ9HzF-ABzv0E81AtTb4eQRh_AkcwiNeuNMvLVn_TmRSkIm45DcGCdXnRmH5y2j46RB8TouVZrFY5MiomRvlAVkGYkDDM4vWykhQRm4z3q2Tp_VMsG9G0mAFSztRLByavEIbUPCl2qYyNyO51rdJKULyqn2lCPlWG_SeWYAyBOStzs4PxCmGyKkOGy9AQxiX75mmF4382yvlciNAz4doK3uOj5H7Uwh-nqtQd25y_N9xvyjhxYNNycey_pzU5yJU5wu_z_OwnB89bgzR5bTUShhKcouaunNkclgsgGoyUSlDQrDhrNEr5XVzUTxH7IC59DRnVHW6SSHD2J7GEM5XLUHWSwpJmGoNaUrZYqE9jlyL8QUBbU7M-171_spi5yjbZYpocAeIgKrBdZTmQ3_6u_lgvIUPiWdRUm14KjWz6yP2MTSiAW6h1DE29mBsudLDkVEGqwVfSfDX90HHvWig4b09x6hyqQnHsnjY2FBVR_upJ-WjmElHDFllTJ6LNrEYzWB6pS66prJmiVagwlU7CX-PVsIjG1dRJFsyJDE-7JQMP1IDXOTNxJcS-rGkfEuUxPOeZI2WDzWrZH57Nbw65m6qkm6sItyhgjtH8_4oOEMVAesreMMbIlZtYM_8v1GsMOXQtFE_uDZyij-iZSES5wcO0yov1aOGGKJ69dAjqcxotRhCeSgy5tiMBOvHc01DMl","p=44W7v2WlUNXk%3DuUAtPFIjpWN7Gxpd3WZnAsbWawUb4Swgd2RP_RWYN8OXVFSMdglL3XLNIYmheUp_Ajbimvf-b2qi_Q2Xyqws_rv1L4aPLgAtT5d58-boPeAzG4ofVTFBcE5ePdAei1wUrO72b6iG8m_sTvZC6CbBB_7tkUfMoMwzwkuYXq2cEXlbmgPsURH0LzEaixhaZcQG2zC-BQPLmxNAkBDPF744IZBPBpc1FQY_6gYn6iPb7CIfY1wiAsLxELYC8KLrn7wp7KQQ7mbhG2XzP2quJlTa-rbfFq9-90FgfkIY7rL1GCQFsl7RcI6WdO9Kyu9gPhH47ugd0OC574D0pFgpMZw18qTrvvlNnvAPJ9Kekj0S3dABhA7HVe5NhMcw_XfIbVXE7jHqpk1d6lp8qJ9j_o-HLgwxF2Dnxhcaujin7OrT6RThavhw3JlbL0q71GlaY3pn8EGQ02nkCuZX3LlZVgN7ZWVunSJIEZnc-tSguhCyL1k1HL9HbtzfSsF2YnIpVC0hGmJB5P951tqvrTQOf9wu1OPlNVNDKr60RrBMHp7canM1ceZcOqeKzdCAM8sEsmW4OUmW1cjnPE6Uv0q5WGcBRE867Xb3etymLt4_67tIvzSVGTO_KTdtrN_7eQouGSwI1gZkjREEmE3g7kdJvYQfbNsNof02LU9PsDhtTM-sQD56kNux0h_wHJD1WyFYKSq9vKa_mYF4qQesguDXGPjVgEc36JSH1aRVC4PWjMVZn9A3-J7aIO1Pai0bUUld4z96DGhnfiUSH5Of7GWQzSeG28evmuVyeOPh5fdU3bm26vupSNGbK2Qw0IFpQbAjpKIysjhTTfdE1hk5bAv-A_3PkQ-XLngMltbFCCCcL37T9S8pq4oowcg_pjeRFfFrI-Jep2nOfHKUIwiId3TUeZWPNFu2ak18AYc2fXixEfECu5y7szBSK9YUkDK_RxYeWTRw60PSYGb7tRoT6q93ArKi-1KQzaIUWozbffWVk0ONWTSIAX7wqoRSe9th2TG0UhbgMzqY8AN1CXaW26Tcely5aEHKNNkSDk0iqW7EhypMpkPdW-tMANqu6XEeQA6ViClMEMRABtIzxwaXga7Ygpvq6eurOdB-WpjVMeLYLjHIAyej2rKexGR8rGkEJLtwWpDPnaloEodDEAM3R0I6HHC6IkAGnDD9ShqcCECGhaG3iH7sOe6kN3Ys4JG8ZZTwqbia5E","p=FWRHEiWXZdUk%3Dy_MwkRLXKJIfw9-wp2M1qG4Tpr8WWIjbgDQJ3zUVJ9T2y_rJjkAzqXF9Wcw7V1FHA_9fKqExUTHXqAY_AtAhJLiLBXDDTipHr31M24BEVkM1FARLB9wY-EtApn4JnzocJGtuJDVqdTVIy4u_FyW1nRH9xe3sv59Uff1i5Xjg-NdFBVpHr2qq07Wi6MKPcb0UYnxjqATZHoOdsVON8vT8JqnyqvPSJd-rIwZH2iIX6J9dHIUjF6VkqBMvkE96PezqDbJ5fVFJuK8lQ6_ZapThxjhnJKlfGTks5WItjtY-7dxS9O8pzlMxeh28OOnpCJ5WTixt6amjYuo-6-PPeQPdhbK9Ams70WigBCJyPpUjms6_SuHBS3y4_6qtuRhD0tLBi8q4Q6yq1PnXmB-FYTRazDozJHcK6YVZY6U8_zwcbefzWGHOx1lOP8Njq5LezI1VWE7zQrSQQ4tYVvaAbtCW02KIVpK2Y5xfLZPr50clz3TFpECHdMRb5NHBu2DNoTf8FqeOJeTlJkm8jUEqY-ZQaREb0FYoXk1yevBMYD9K5WHxhAqBO_9uDzVyI7gOzoj1fE4eXhPrYVDr30iYt_n6X7oV90C9QrBXbd-Daa45oTv48w8KQg1tP5xVq9p1slu_wNY9fBSj2oG59oRw7e6CuoFtXLVcEUvaY-sc9gemdy2-flfqGoQyBJcdJMpf8q-01wkvrV6LozobrzgW71WqXzrOsW9ZyRvUxrLgWphk2WHow9ClggPRO82J0Ls49S3x-xAWDgQT4reMJ20beY_HL_Z723PmsF-grsOvk3dBcUB7yMK5cd1mC5KLxAksIQuS3yaSQ_5EbA6Wo3heosv6aSl_049gElwBHD5mYyVBwipJNMu5sA1n5IIUOzObbF7Wr0fGlOX__YqsN8HzImdiz9HZHGBLDcs4ZnMPj4eVsELoG2fs3dq2SNc7H3tSrfn-kf08_u6W189jCDfs92UF4v87XnDvqQPnTNUwUDahysw6twScz8IQZbt6pCAs3IXoBtUY8M2bU0KlwnDtxie5X0gAr3p9br0rmSctJTwGFONKqavs-Pm4Jkx6V7KctNl3IMveLCJAAgO86HgRByAosVVQKxTBYHjowOC8Ij3bOBcLAk3qInK_Mgj38WOlVs7zFGQNBcYOy4zJgkFonztSUrUKBwdCr8QE00WWe4RilKnitxrAvFtOCEA6uOXzqWEb","p=44W7v2WlUNXk%3DuUAtPFIjpWN7Gxpd3WZnAsbWawUb4Swgd2RP_RWYN8OXVFSMdglL3XLNIYmheUp_Ajbimvf-b2qi_Q2Xyqws_rv1L4aPLgAtT5d58-boPeAzG4ofVTFBcE5ePdAei1wUrO72b6iG8m_sTvZC6CbBB_7tkUfMoMwzwkuYXq2cEXlbmgPsURH0LzEaixhaZcQG2zC-BQPLmxNAkBDPF744IZBPBpc1FQY_6gYn6iPb7CIfY1wiAsLxELYC8KLrn7wp7KQQ7mbhG2XzP2quJlTa-vLsvuSu7bAYZ8X3Z65WJAYTeet46V_jjiwNVMjSGNhXBk0IQF5Ggjdo4_N2Gj87qh9GMkCtBDzo1fZ-RdmjqLNNT7yjxvCWVFLKI20QYwvvVhs9GcMqvJMCfRmsJLicu0G51oOZWj1RUSrA3QMsUNsAtJX9IuXbrYy8q8kE7JPFx27Lb_TWsld4IVfNXUQwRbB384s6aXcPdW4hG6grGuQYo4RzAaf1cRGSR08gw50f1-qzHx-z8jQev72CFEk3U4HNXlCjaDy1Pbj3vDoclybS8IoYd2D56tMDVphNB814CHCMQry3V04kIOl56JexfUHksd-_uNsjz6VDwQzdO8s3kH4V8PPQxUIGQDi6PRAnn8JJVmUTQFmB1KT7U37eaTRUGu6tBylCkpPWwJQ3A3XjCXHHh-5pHsv__tOcOow8febd-J6CJf0WGJRZA3vi6vxGdNmny6IcIlzdEcCLXEJ8vX6ZPddI332JEO2uLqf5Af329YoAMQRvt1u8KVyjitPpnla-sWlUFRXqko--wM_4zBhHOPiCIINKPpnvYy8h3DVtrJm9bOaXoh4IWv-gxr7M-dTJ2thSr1faeFemZnbXWoYB17ExOD0UeXFeffeOpWmy9Dhr6-mm2bd3Id0A0sJiAI2zFycCG4h3qdRFXre-4oInYkCrLVxie7Gni_MDyvSd47riJf6y3R7fENBJbHGn-tBjIxwciaQZF-LXtzJXugFXhgdrCSFM2oJJQtQ7IMYM7KsdAhJuR8Vg1bkO2h5jLIPM8pPX7Ny1ZQmr-A-9mlNkERroZE7UJtnr-Re4YFhuT8S0uvT7ZQfis9YUbvrULkC7Qf8WaQocPFNgnXElF7I8hCv_krWIY6hYib5tonswIdk1Ox9f-4wzlpf2OnOLf3eD9yIvGnvzKzQgh5LrbfngDrYffOiio6DAmGYHjT","p=jMIr0L3CWXKI%3DdjuFUVYbIhBZ4H7LKciK4Yopvbj_OiKyTYjsmjZ1N7vd4Ej_9dtVvsJTAeswIhG61vuaSwXATR0drweeDmWLyyGzsQuW8PyH6H3J5mj85XpZ1OY-Vs6xkHzcd2454IALxWcviJH_ZuzLOvqNNKed7dP17VXfcfOmY1enzFrxStr91CkO3Vu3noTqyXzF_ZxKnQXkFL03ZnKm6tQWpYz_CUvA4DroesYR1x1aCgd5Sh7mfj_EyYb7iaYhCEnUNxltKSn6dCR_gFe2MOiTao1G4dGcKP0IdCUuZ1PFpGTNtq74xI73_5jdUGQppn1kNxxZxGUIkkeZv9U_dXOAlRkyl3UoxjS-5S2dW_teEyTcKoS6xeFPu3OokzdJvYigyOKRE2I8JX6M4ghxBtF2W4qBQn_zWW3TCNGD_R9dKipxgpR4BGfPgUfa6R1JmmPGXyWPZnrfp2PVsacqF5Q358Mv4NxSKw941gJXW24SlPrATfE1Hb0XuOFVHsdphdKexQa6MYLc79Bwf2TzHBcOA01CuwmwInV0g8jrndl2CzkmEMCEc-MujjuuW6Zn6dkSua95iWU6gjGDm4NMYlgVeXJgNK8OJLRIrL9otm7J_x21AEddRWIec4fJkPW3LPXMUtVRkIOhRhYsC_UyFpRu9mLUwI-0WZDtXBYXHBu9X8gRhe7CNzIzugd7i_fKAjnBGrWNvBp4wOEugZxoCyh0-LO2c8ssyJzBZEN3Jmz0UU86xwJ2lu6xO8TQg7SXjJP-9CO2agm2BDy4qnfry3U9y1SEzVEHxUxIHCNV2s_tT-9c2dZNS13vcgJjWIMvnZ-ZjPS4tyigW8RjU8gjQtsT_xmOg8QN2wzsQn1doRJ7El_VBCk8rHtVxzefh5nonhw7IuaeidNw3DmBvspme4UzpBUx3RoXFRYCD36KwU4hnKukU6BB48rqrW4hl_tnFFfIfreXEri-L4OOcJkyrll1L8EmuyhwJzPxWsegNb0mclpLxPeyrlzwiwC6MjUqgTPmIKUNtkBJAyZDdPN3evqc-bGBXEDIoW-EB2peY52gNDqP8npWR1I9hQ0ifhV1htZJcfZ5Gl6xJx6kCmKHyplnlTMxN3mWj5PfO4BNUsscyd-QMngl8sq9o73g2QwSDjqz4afoDU15vuGXP1MC2aiolAaI0MOpMkjVhR7F9Wj0WktFmTowlYpamGFj9ivmsQn3jdzp","p=Jb9vgm3fvNuU%3DEwEuv541HjotjspRSmvRUSyXxzw1E0lKVnebg5Kn1JewNpdKqLXROxvlxJAVdejtlfBNUv6_PwwPqtQQsXopXovl1pZCnnZQQuYDXYdIq6f8rYfY_Cqn_OrgzwTqziewsDWLlVKpuAjkh2bSWFNZzeFwjV0Wuf5yTU5tP2IDIizUq91SrsBc5AiPnB-SiAjAWIG6O7Jn1aaojOPTSymuIv-xmVYbn2z4PtXFi7-2VIjDZ7I-WpSU24wsYTgRa-eoKqHDKJEopKp_1TXeiC8tAQELr0JBmrVVOBl-kRl6cDV1dReUAK1TyUWrQT1cmnouGGdi7Fj3Dps4p-IHjXB1vaKW8nidK7qzbk8TF1pEzi6XplAlt-gogjE0IJApRkyPZiNEjULTH8StH6YzfcapL5lOPp5N94ICTYv4uvted1aSaXIkmGYHpTNU9nCY_Pain3fwgjF4hXQo627kDphMUL2Na6-_FnI0UrOP3FECVQkOVfRYZsbZNKQ-MhAV28-dbnrZXfJFsNUSqsvr-qAgrLNHFFMH8-ejbKExJ4V7glWQ1eefSXYE0mGDBdtreDTrg7QHntnkY6PvcfByzVaRIwR_Zv2yJt8H58pJVjM__b5h8Bo_a-aMEOQFtdKo9fIzatvU3fFIMrHjxrOJMN2kGII_zIPQEZk7bx6Rux-s-q-jZG2tYDuvGaLwB6xEAo0cpMfVdFCMe2jTigBHPpT1yaxtZf5dAk-5tuNLnUEQWvue-XZYnuTVMo_h_XJ_CMf2NyKksBf9_mhLqHLo6E7ZMwd8XTvzrgWoKpoes0jy1bCOngbo23QRhejETO655xhL5QwZJRJ_Po2XUxvwh63dX2-EBK9DSlUGZ1EHUBxaSwd5mgaS9GF5VYDMMvEsqs133N3edjZXus6GF1jC2L6JPhINLVobVXTxBCx9r3kb5u6qa7Vt3vZVuBCcUa5WMSoXeeZC_PvvvrIFp5VrifEH4uv4EkfaOAon4HO2AzuHbwXGvrj_nwStQcngj63d3GLlnZebiDs209FDUlYx4kQ8yDHmPJL_HvLgryJX5vVC2zGm5I1tGPyxqtOrtc4DQh6JFvw2iPqS7Pbj2DzD-5oc2xsdqIgeQddi_hlhRpoHIaJ_iIyeRaoOTE6duRh9pKwh3a-m3Dj37VqJmYkxuw0u7nMFlzdLQRi8KaIaVZyBCBYDTw1y90vaqjyEk3gkMGhAJ","p=f4W7v2WlUNXk%3DuUAtPFIjpWN7Gxpd3WZnAsbWawUb4Swgd2RP_RWYN8OXVFSMdglL3XLNIYmheUp_Ajbimvf-b2qi_Q2Xyqws_rv1L4aPLgAtT5d58-boPeAzG4ofVTFBcE5ePdAei1wUrO72b6iG8m_sTvZC6CbBB_7tkUfMoMwzwkuYXq2cEXlbmgPsURH0LzEaixhaZcQG2zC-BQPLmxNAkBDPF744IZBPBpc1FQY_6gYn6iPb7CIfY1wiAsLxELYC8KLrn7wp7KQQ7mbhG2XzP2quJlTa-qtDyeDAWHBNnlLibDcOiJoCYPylX-3CEMiHgNfnKyUhl7JIHJ4ShLeRS0kez9BK970NFOYAbXjFU-Wg_ylOaLkt6HWeVeau51NaF_qFEpmnkMEtgbvjDBTfFwfWgKZdIJ5dQSJQtwYav3VWiEdvN-8yY17aP3eSvT4ibqsiaeVCxTCvxNXzzuF8yBQVVfAGi0iHPB_jcId3KqhtP3po9034WQCbyhcj6lMxhv4LrmMTT5e22fjw5HLinPNWKwXPfXn5cURVbEQ6106xk9jepPY7_JCUrYaJmFka_MFuGCdS9KQhXi3L0bjOaBeaptVrsJAdtTPCMJVsjNAQqVMPl7lh-1wNc8hVunDsH87PNL9VcpKhTvqw1isXf0mG5ol6TSztP1pDYcwckr1DxL53baCWtXcI60mt82D0uZ9yN_jKqby97IWUzdtDKU1zSbuXPMrorHqHs9S6uR9hywRmCtEzljebLspn4dqsd3pEAiZTWXs4ETSo2SWlyncYx4uzW-HqiRpRiCc83keWaTVIdrczDn3StUVmODOCmxz4Rok_k2VwXvpI_7qxtvoxDuwed7SWxspyknvFdKuduKh3D_X52qJaadpPLbOPSD1txvazYFuLD-ilA3-RBLRQUDtRpeIDsddQR33KW9QzhpnjbN0HTE1fQQ-8erqfz48gf63Zjio-5LYicuI98f-5AG-2HSbcALFdPXhGziNdSsxDwHiPWfZyuePqbkkKgN0MxOLcHTL2Lrg6W9yO0hdyIMURMH8gKqT_JyLXBquIhSUQnlse7Y0Y8Zfm1rSxX2VfR9drn-MFQc90saCn-C7qikOOelaNZSN1QmrHW7dyvcqsaN2YeYLMDeeFgfL1DD6VK3Qnnxt0tkE7K63aNb5X2iHGVqX4ZIYr2o4CY8cylhc9PZEl9dco79OQvgTET__5wEhEOq","p=tMIr0L3CWXKI%3DdjuFUVYbIhBZ4H7LKciK4Yopvbj_OiKyTYjsmjZ1N7vd4Ej_9dtVvsJTAeswIhG61vuaSwXATR0drweeDmWLyyGzsQuW8PyH6H3J5mj85XpZ1OY-Vs6xkHzcd2454IALxWcviJH_ZuzLOvqNNKed7dP17VXfcfOmY1enzFrxStr91CkO3Vu3noTqyXzF_ZxKnQXkFL03ZnKm6tQWpYz_CUvA4DroesYR1x1aCgd5Sh7mfj_EyYb7iaYhCEnUNxltKSn6dCR_gFe2MOiTao1G4edXnh2zkkXPmvw-vLOEcDQYQx4Unsa4JAUvfViYohghCOAyUVv18MxkYBwiRjUsP4gHC1kxt5LXq13aM7q76dOXe9zZddSGgyYV3qRMRrMlDXsxspIa40NBrtCUPo76hDnty5U3H8WmA8W-wbJmfqtNlwvn5dfXuuVuSvpaJo-LAJ14lQUsRBtwG1HzpbFccGkK3N66zeS-PeeKwyV2uL4q01TDoAFw9DXzSolAMxTC-pRZOZR-bz3MOdEUI5ycTMJygzia-sLeStxNVWkXeT__yEZkSPBRU91AkCF3r1BRnSKrtoQj9VDQh32xVWRplXp2iRbLXZBakNOu2a7Pi5qvp-D2IbICJqHDUaciGal77kGIf2TQEkGGDA8QPKxb_Gbdd0XbLC4oj23R97WxfGEAZY2VCvgR5Ps0NUXkKdSEVel8SjbEj2lLWi_usFWX07uJdeGXnzwB7Io3PG9v7f2oJctRmQfylX3fBXUpXQjHNc81501SucFmrW8jSKVTs_Dokf-OYGILbT_DXBMMmsT7RlMNOFJ0DNL3uUlho7hm2_mF-obsDznE7HzPkyiUN62E50qLCUpb4-1TDJFtW5WVUZXS1Xq8KUQxgq0dO_ZDBc-hhD-u4b7NbZFwrVGUF3sm_7DVoLt64F7iWDXaJb8edLpUOg2Q7O4zfigoxUDCZrNjNgRUxzj3J1tdUyVe9VmgAaDkmk7XOePwgDdULdOKwmBr168QYplgKWt4ZpkfOgpDFHBeTsP7OvYVatVYMeIFvHjUhW1EOXw0m0mcyz0Z45NF5YXmoHw6GZdfbYy27Zh3XoecVIXC0P4ZD6PtrtSidhecRZYm_aa7k1XnebCL6Dfc5qmA4Y4rL5X87vVNDBrrd6jlmCRwR_wpHDJOhemxF-EW9a9zmW9TlENG5a36vZUt8nfGU-9mGgPho5rn","p=DCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9Hee_jjAhvHB5CdWdo5ln4HQF_n4aX6XFCERMjD7WTUMBsR11eucB6_KB9jMVh5hujJuZx3h1uTI--BGtJ6RDAUccO1OYd5TfzdkGWwc-bAxYGezJLD2g1dy11l39uCR-l0Jubdo4w3ldCxTECLfLyWzf6vglgDEU7HU6i9saeYe9gz0qOIxD2KJ_Sc0-YfMwpm46S-37RNoyr4_H4IsPOqfywKlp3zkUrPnfw3J5MuamIQtMaj1b7-im-rBNLORm9Yzsd7IUPDTPpBxGR_5Ng0OsdlI7Cx4MHA7dyY7-2LsVMT1Cbe39_mqMp0lsrb8I1DS1xTYQPFdVvbSMSVoupDhgOf8m-X8UA6D3en9QB_hq77gOQIvQK0XcfG6r7GisTkb19F0CRsTSAoOnpyzHIggF54yJFtBDHrcHv5gE0qwqzLdiEanQCJlGzSZd67OPYkGwntAyM8QisF_e2EJmDDmP77fQML3Ss3EaUL4znhbsjEgcRG2XMEhaDt_sCk5GinBCISAXU8ufXh0U9qbUv1BVsFToLnyJeNoynyiUriC9eFMemKqME9gRwN0ThBcbJgfaHyiMi0oLRQxnQGfW7iqkrYrI3SkNOsxslFpwkzL4Nca9b4uFqy2qX0HARa6HrjSzf2DmqvdVM--4Q5_2YzQcqOzfJ3Ku6pRYDccWPyw30UhoH3JYdEYdiyNc7VUFvzLCUg3CHtzFs8qM_ROAhGoZwYyypBJUAK5Zc7H6ZTWWWllvUpUR75k73byrzvyksFFGavRI2h-TaNqQiHlMEQh5P2cBbKqOLwrbZzDE1AYJvRMsgOcErxjGUYSPtPrNVE4wEf4UhfqwybumfwT489O2hy8prSPwVMQuIdjhO-9LxjvOIFlv6kdqvKXoefV8boVm81veVOTbn-ljuo7glf1mseUcpes36StwALNCAVZcc1uw","p=NCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9Hee2cCGZFbpklwL1vikizyEmrm-ZMX3FxreSTVmQX5ehBUGVu7kchM0PQEDVWOdk5zU5W69nEPC7o8-E5pkntd1d2dS0ud3pRPy4m39Q33OaAtIJFNKpokhcRICuSRMMl4nz1lgZreFjjnmKhtuztBAJgOXyOTsS2lec2p0cGf3EbJUGgNqvcIdGurSE8uIDiYmVr2MJox00QTV-1ALF8IzwBJ0_iQp3korSLfRk78XTtX0dmWj4d2zyMAdKNT4DTG57w4IQLRaZgupEjgltc6G7pmNFMpyd_jcOsfnPE_q7fZ_8O1h-cGEdu4dipOyZIYGi2_2Z4rzptTBn8UZEINbUnGp0LcG6Crw0BQKSzPFkraYCEN1_ueazjDvsMQnLZC1wHHbGUQuYkt6oBoVYfxSIJDnEq9Y8DpkccjeVwvCEK8numJs_rX2S7chcX4XjwFYXehVsl2QqJkccXaf2zqtXWicyKrnHkQ4vySTeDA-MsEq_cbBj0_Vuj_PsidcQmRuVVssABAnMeA7QzL26PW5NxlzCw9Qq7jo8P68p8atmMN-jusFq30MEhsYVPRUw01KsPYZh1ZeAChql-30gWS2oiHw_rIspH-NKB3jFfeNp7H1LgpFXZsyXNljNNWn5PFYaMrDocNLwiL8z6TXb2GA3uRe678aa8h7Qt7PtmyS7VoUzDIdvaPJDnpDuzQyU9g4l9_Me32TKoyKX-qzTGvV4gY5BWjngRVgOA6yp-JBdM8tlv1LJZ214i4IXO6v5s0fFLUTBizHChPvThdnJ7uOKoOUjgjmYnAomyQ42TTsQRUwiMhsQvK8FsmSmxevfPmRpMt_htWnsMWa5cmXvrvHr38c3JGHV9K8iW4cGUtmTgohLaoZlLigSrg03A2rWZ4jDjmakws_mvqYeLlhiKlukG_PbhmOw7jruqZMvP8h76NZI","p=6b9vgm3fvNuU%3DEwEuv541HjotjspRSmvRUSyXxzw1E0lKVnebg5Kn1JewNpdKqLXROxvlxJAVdejtlfBNUv6_PwwPqtQQsXopXovl1pZCnnZQQuYDXYdIq6f8rYfY_Cqn_OrgzwTqziewsDWLlVKpuAjkh2bSWFNZzeFwjV0Wuf5yTU5tP2IDIizUq91SrsBc5AiPnB-SiAjAWIG6O7Jn1aaojOPTSymuIv-xmVYbn2z4PtXFi7-2VIjDZ7I-WpSU24wsYTgRa-eoKqHDKJEopKp_1TXeiC8tAWgbeMLhWSsdY_0iHDYsYSIDqyZjej3_QEAj3KZ9VhQkEwi8YQziX0vVreOfZD1aMZwyKV7IfOMb4F0z7myj8DRBr2xGnUK36WM4EOZemMOlCUWCB3esDn2ZK-Iw2-uu9Yn62h578x4EEZ9YNR1jgRR6UkyOr_7sYzgDlHBWzxNgPASU2V1DG5Ct3f1Lon53RJ1H94J1IKNp17ZNeWTqTFO360uA2JwyEaS2P0_Me5-NPOvyPiSe5DyIg__CUeIYB4awrCoSJVSndEm39Of_pgvJDrkgfBIiC0TRqk5ZzujkCtieixdArZWIQinE86-aUCyY9_fe3oB1hH6cETGi0RaIJnsl0nlMqEOM6tBI9qcy9kzrtQxyHAu2o9JKwPiEeqe6tmeXnE8MynnIAlZfquFTUvVncx1QoU90HYDyCXN_86jzcoB-USosuYtqVQ32YK69o_RLj7EuPxH_cUUx6C9zTmY5oyo7gAI_NBl8GLUhtoGBjdUcFg0Jg6RzrCCQ_KA-DeqYka1BkjqYSbf2c1Qm6PEf6LKn6uUmEemxIixOfs1PFj4JYZJnR8h3BYBspm_WgaLb8izvJ-dkmQ9oJwCUt2e8zn0dTbgiXUZruaN8kaL6coryEAX0-7e3j6etyrXP_u502F210XEjZ8sLOSSlnotaDJKuhVFBT8AO08elcCqa-fQWXlQAptGvdaKo0M5DmhH_lN8QtIf4jKVYmB2Q3KLN8zqlhs0b5CZum7JR2I-ken-ZTYlChmM1BLmo4qvjhW7W3dk6Sql7E5sF2BctcKMeZwwKiYt6TOK2CIfsNdtUymS19Iy_IBZBAUKJIrAgqHhrXlUEV6rPn5v9nmhQ1HJY4IdTMyq-RMW95YcGvvpNaPavK3TZ9StyWEQ2ehUxeKQ7PKaecMWRHR2-A6Z92d_HouuufS0J6lHlgc7VX","p=XCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9HeexSkQFTgAdheSU9jOHp5NKLXJTU4m81yqFJIvFoSIa1UELWgW_FbYEUAilgZ2kdf2hfTaahw883qj3AGNIiiOoNYtKSOqh4KVMyU1sIywQgf1mDYNfFFEo1dUnNP3yAESaU1Zfx1_tEGlvTyADPMiwtY5gHLmbZwITgWSUrAHHDprwomEEGF10q6WN0pviJ1K-2cqdHUyuAgr9Pv8dNGDbvLnT7UbHBLGxWdKaznwuHYdlfBkh4nUmyYmfGeCXa_I2edHMlmeQVE17GTxA4N0hTxsHer7qvP1mKAQa1MdxPlRHEZUEGnuIleXym6xhH-P3fJ-wxwhosoSxU6GEdzXP6Cum0jyRfYCO7Y7sJAEptMjf_g39-jFvf4_oeCh8MXT3sALyIDahe4FMBiee8_dSO2kgurdeHvD1xPa13gXbH1vGhenYkgaYbNbEhVl9PV3MIBhTHNhPOpwC6z8qvsrZTGqZ7Ry6FNh_aHHogQPl0FMmGZLv6sg8zxU6-g2_tX8KNzYeSG7-nclW_6A1Jm9hCaJKRXtpFy0-8TARTf54gvCJpGTEflq3HZZeR99cXjfmPXNtmcJf8b0NJSDjahS2ZgsmRWU6rGUjBmNl1MstfISHCc1_FdGSuDAtp4jIXcikNHmXbkPDArrdAkJtwcPf7khd-JA9dW1tfZ4J_sMGy18FmodDyRaen6qC3Sj1f8NMrnCtGW99nUHTv-KIHl9oIK36VrrThUCBtUaQ7-vwfGdDNvISTUdbneP3ijIOF3BUjf0fht-aM2LXzujyXgVtwSMLXZshgLA7ChlV3_2HbyQi53Dw_Ut8mO4zedz_lHrY751U1QfUMJA4_F1rbTu3kcOPTXvfacxOFVO_lJZ8p47gthDFK2PF8UJ5PpRASFV6qZEhP7p5VRbnPtTi6x38PCHObDQLroUOI4O0sXlHyBRu","p=H4W7v2WlUNXk%3DuUAtPFIjpWN7Gxpd3WZnAsbWawUb4Swgd2RP_RWYN8OXVFSMdglL3XLNIYmheUp_Ajbimvf-b2qi_Q2Xyqws_rv1L4aPLgAtT5d58-boPeAzG4ofVTFBcE5ePdAei1wUrO72b6iG8m_sTvZC6CbBB_7tkUfMoMwzwkuYXq2cEXlbmgPsURH0LzEaixhaZcQG2zC-BQPLmxNAkBDPF744IZBPBpc1FQY_6gYn6iPb7CIfY1wiAsLxELYC8KLrn7wp7KQQ7mbhG2XzP2quJlTa-kkZ7kL2kaCUfw44QRUSeginue3MhSuF44yzwf55E2fwTjX3JgOohZQtulUO1tYmuAv5zTCk8u2TPRYDnjChZ3sKWpiwL6ej9yYkBMWhwI1D2pR_CCTH9wL5mehpR3nqpptjn3J8D1lHwfsxYtELtzufXXgnlP2izcPyHyCzrj7Obytg6SRjlobNSOn1R7BYU98_ku53ixTaKCj05vVI0ILVljfdPUs71gmLGDQ8Rs5z8vwEkyeAENUzDDFT4x_yS63pze6vNrsqHpk-UFPvpHoRuwNmXvqaRS6XYvG5T3UNlHkOICoRiNmXMaGrURUPlTDufXXd9EVZatJG9FVd1plWhTQZih6JYPFioWYjvUy4bxuwykLvdE1uhGmj6GiuxaSAvxssPW1Jc62tgYxEaYz_Wty0Z4yOD_gjW91Xun7ii3rqgL4WhBkJgwzLcFXFlcyFbG_fprbl9SHJOoG3CGw6BK3SFCJ0X9fgdcHN6L4y1JhjL3S2NCSS9uu1ya-ZP05LEuUtQTgk2SkwGeKyczgmYMPFH8-UT-azr-27Qr8YWzu9QrZybDeONjWSQKCfpBmF2pJksS3t65WNcgRYhCAtJ8Ys5hNIcsboAIFF4tUyFeqssIeK6UMNGhUszbYoir_bh4Uoe_bg8xsQaQxso1vZ-H4RIA18NF_5myxDHwhj66Y8Hx6348RZI3pb6tdJtdD5fA0Ugn6yPkcqqQyIChG2c4SZ_A3bB5LEUmJ_L1AfqCCSDOTwD2Z9e4SeAIqA-UAnfUKR4D0s3QCGOJswFzznzov2m3KyOjC2tgw6c8Jfrcaj2ZIJLJ0wxTVVuiK8u2TGDiaATq5FahqF3KXsS-JlC0DJiTnBYLUYcaor1eVI3z99qKM9v_lBt9ThuTOdxN1VKptOFXIoitwcCGDJ3_co4HD01JpXNMGq0yIHSdp-jT","p=u7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieT1IEb50878QHyoS-Pof6uuW-hBhxBMD_urbicmjtUR-poVKZzy2ggDXBrmcO_TGAFChmgCqrgZy4vRjTZOuUEfV8dveVJVk01BUPow5m883ChbVGDkhxMymhr8R_4lxsr7BTHjnhx7ePQSxVSuvzm8pXi6vB9WwUdO0aNE5F1a1IfwtNpunzN4ECIhcVU8eHbgKITLiNtuMZ1jnXBaHQys1VwEudVvyitm1KaxXUPlO6R_na9aSGVMhu8ln6qcAGyev4X813oXyVXu9HTNnd5Il4yDw7f7elD3YXx2Vo1T6deyW7VCUNFVrsnxDJBWFDuXofQ0t2RaG3Fd6idOcQqceAQ7Wn6x9UBVkJ7P7r5La46Cb3xRw93a-MP8LAppGehxBponf33Llx8vqD1VyrjpLNdH48xjMZhVcmgQPsothghdrL76w7O0x3PYbTIJbn9a1C46Q4YaQveX4eq1SgblzW3PmOko7DxfjViUW9qzWFhR9ABoEGUD-Qvd6K7uUj5uGklnIy5xQ_zeFy1L1h2j-phHG-e-bE5yhibxNRI5y0_RGeMKqdDNQnsLSevvhDqAnx5f2fmoFy6ptCcjKH0GOW6bzdxQvqBQxFDZvCZrzY6vL9a_CVbrFrpOfWBc6keOZCCFK6o4TF0RMNQ-Os2mAChAkCLclUNAzYCRDTkcq79am0d7Sl44DsXCgnQ0imAvNMO4g3bsvbvN_NPiQVJ7x61YEReZn64q4Qb7shEg-uaZyVULWK22_ZkHRxSJnhlEQ5uVLUDjJOTvaR-wyocIpuMXaaLow7HcS2p_-E3X4tjBwaTwnD6z12JQ5PSJ7jat-VwoCZU7o0PmMHOcGoqZpkUNR94gM6ZkrftJRfEuYIKojUpPfVjO0qQfyr1hBPMH-F6xUIvfMKy7AG4keGaDhyWQE08qIl-oU_1Cc5ek5qi","p=DCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9Hee3mp9p40-rgod1DAP7KcRWd-FDeyfylb7b9Bw5VALfRLv6nXuiwwyJ5yK7R7rRpHCPvZjFQ-_7lxqglSbrEODAUHgcZbkArh_MpqfBF1a-6HgQStPZJ2msIZgevdtl78b1Jk8p17lNfeJvMaCqj9z0hACCQGXaFrdd_B8A09UoM8Dwv--UjgP3Bb33d0aPR3XqTLslfurni6A_3CVx6fiAnAM0QWMLCwjjC8TPE5bwRTcZSwGUM2q5u_5q8npWQB3x3wy31AsSIQHDS_bn2nADWOK5i1bPTzEG0ygs9VijvU1pgndQ7TqFXLcD_QrGleOwd_kH3aZBUwYWr0-eG-8RbHNTwKVlOyDaZ7r9RQWLZgCBAlD5rlQAnGyJ8sWPQVdH2DFFirbPISl2BjDGCcD_dahsnLnjmgx0KJ5e2_EMPCns5OQB88S--38jL0TX488CtrE0uUVGdjDD3ZB6du-9zNaR5raTw8eQx12LdrBoOT9lPIeJwJhsfnGXfXY42gZX4U7dXNSvfKeI6m2v97zvu_CaTDGVU1KO9EY1Q3v2aBjmAaH58K1Db01juBDCrmSjn8Z-s56cIwAaJywr5-PxmY3s2aIKk7QqDLzCcIHkb-OEQZpBdskV19PNUHTcv1dQ2t1pDJ9rEaHtcsnjXxof31bt1tZR3OL18KKkUHHEK4h_9B5pA9mPR-52KFXqeom7pHxjYHOp0Rpcfp6B2CE552d-JSPucUEndrij5ruFqzYSCPsRuPyxayXc9NjbfAMpudPRhTpDSe5XsQL9yATLVPbXp00j3Ib3YgtlVp_rD6x9z_4KkY7L7IkrkfS2vW0Hz0Au7jmGuQCl_5PSbfM3hYj4VPqeehsQFANHYQ1OW3Wa_qDPHOTl01p_9d1Ex_S-Cw_JDyPXrxWVb8O0Kky0W30_e_s-RLAUW2IXhsFPRVVV","p=EqH-4Ui0XDPM%3DWFJFCIQCB8W5gKiwJCEqlDeq0YjbEsiQIrx0-_VW-1dL_R8OIzxE0-ynasIaNTfEmqFjob2VoOaE0I3ehxwe5XL8w0mVb2W0POcCQqJXJACAJHCUR76_nAAeHIJM3trAJbLijU_vpTPwBUa08es67xjszA3sD7rhmH_3AwogYs995IX82ZwpaFXWWG2y5_4SM8TVnacPy8CsQ6vU_kYclz2iH4NIE031Q5Zjg9k4FJDCEEADGhmqAdl_MMUMDDAgS5IPVvFO3r4K8jHXFiSFS6mX2UVaaRq2r57Zq9gNyW8LWyyuyoYup7Yk6oLK_GwJWZ9PFc94zgSizO4m1KbFvPD0BcpjdsVRoazBhpFyZ9VJblaeXVoi6zeGCdrMJFYGKtHWHW8Kj362EHI5qf5P9QcyhVPvDUk_xktZMlrcMflNyHd4Kzn2zFZ3ykObOon7sFU2HEX4ofFG2Twpal8RXdghDlLmHw8IRQK902xM24RntoKSQDsY1b-Idl8GpTNQdcDG7OAnJ1M8dY-5M6zkIv9dwsKvlLGP447AK9cLSKYeSksYtHyMBrObN86jxCfjPexdsT7VSb7vGAPOOzERkkVA3BfKw1FZq9MoxYirr6fMv6jXSgBMEP2yJCiHumD-83AbmMBgM40qxAZUFQ26LpIemMtpcZhZ2lRThwQZs_PfvV3QlEG8h1Cbkxdpu22rmddh3R3NCIw5WrreFFZ3LKm1G83JvPmhwkq6JTw_E-CBQTtVvt_oZzcMjo1EJ5WvBN2z35JiePLIBbSLEH7t8hJcfLe9tAvXpPT3t-CrmsvlY2204pq_KHlictVlISuZUB75SqGpt42qRIZ0HmMtwB6mF8UPnUF6hJMY52px4qE4iGWAC5ea-XZRwf91-6NkZhulHZ-zoBkz70bXxb-6_ceSo8eoOPrwAjZui4Q8vdojeywJJZuN-QdUzlUCSccxLtD_Ar9bG06v4Cp3Ygf6WBAEru4zKVbxNJa0uPR6Z9fguPut-B0kzP7ZM18oLX5FT30G7Vv8Nb_2_IhZYrsIZhDbCessVef7WwOUm39dh7A_qP9wgN78bQFCsZw2IqSLrsHwPLfTultIrNrF0Y7oyvRDbouicOw69SdulYwReV_Y3tZVhAYl7iD3Tm2HmGaXFoTX5L2UTakSux7WAsy3sjQ7WATXA7wZ3u6lZd5pJ021llPwMItV8wvJEyZyXxDz","p=y6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05BtwjbRVR5wmh_OmAngsh6ZKFgWARK3DVqs-AgF3pFEh7JRlbESELeQ-HRyLsBvewszaedXnkLpeeOiUX-nilEKSuWK8sTtn5DSnyqWzo0Ly6rPiUP9Mp0wtS3ExMABGFqDpWuoircX0Y5e66MLgzaw2GBpEwECBTfFOYwl3neTr6uqBuCUAenQFZErJVhEFr_cTb2vQXYd2OXk3Sc-wvWwqSISFEVzMpvIbx5oLLCh2G1lU2tK19_DPTFY5D6xXKUfS79z00pBTGpfgcXjMyWP2q11_7WpLNbQqIF4KRdK0q6polPF11KVXOi-NDzB_jvj0RswndtWfBws4sUbJC04pp6-CHZGEdXhMQdYOOr5tYh7UyHrSc58A2B13C_Yn8Xqv0ZtLt9WcchxZzbyl1KLAEshLXTKe340t9skyKMTLngQHs15kV4kXRMR4UOQ0EyRtjC32-aGJYpWAWME3jKim0l00HQCGCYk0TJhZtXlSeLQmOMOX4rv3GNIelS-xlQKPCHihPnY1eBG2awrH_9PHEdkffJ83zWpm4GShZHiZcX83sLJnpzd7UfMoPJa2Q87b3Da0CeWZcHAr4TrU3fNQEq5uMCCE4odmY0UYQym_jNxAxZCROOdF81JQ7uIywqsMtD4NoayB5ZZs6v05QSOAiiblXV1N-fng_WGX5D93uY6nWWckwE005AjuqKqFMQbAqtLkiOrR0LnNipkhMCUyA_lut59Vf-FM3N-hGugxGg-O81I9jOTsRGIZ4dgR9zTN88jJqaPqyh0eMUCw3cWafg59XBfYqv_GgiXduUbihKMv426yNwxMjDeGp3zOpDLCZAjqkN5vuwcMUYQx4ObKukmKDEk_eDkbZHvjdHvArI04iKUe-2oasR0KRY5Hu11pjfNvF6QFAoXU_luUcQ2fHILlwZ374oUajQn8wyU6nw6","p=1qH-4Ui0XDPM%3DWFJFCIQCB8W5gKiwJCEqlDeq0YjbEsiQIrx0-_VW-1dL_R8OIzxE0-ynasIaNTfEmqFjob2VoOaE0I3ehxwe5XL8w0mVb2W0POcCQqJXJACAJHCUR76_nAAeHIJM3trAJbLijU_vpTPwBUa08es67xjszA3sD7rhmH_3AwogYs995IX82ZwpaFXWWG2y5_4SM8TVnacPy8CsQ6vU_kYclz2iH4NIE031Q5Zjg9k4FJDCEEADGhmqAdl_MMUMDDAgS5IPVvFO3r4K8jHXFiSFS03rHGZXcx4pUC4bsNXH2GwcWWKKJmbDbU-luKCdXHu7lg98NQQO0u1oGcTDkSB2cn3V92OuQJwvi8uOvRHu9RHK9m7Btl1HCKiWNqIcLuf-IRF0u0CviXzLtN5l9ZUHmoKTzbbPGuemwpCC8AImyR_ObveCCytSJKqoJqFBnHkpmKakjSEXjSeyv0BdURduTWDvbU54nB2C_M8R_wenjWP6A1iRw9lzy3fWBm4w_UPRNR5G15SVA6EiWxQIbXxbKPlwV3W3uLYXg6A3rP3PdFV9Dxngpx5u8ZbnocyegCWRiY4XDetcpmJY7oWRS50muA8ixDoOz2nTgOh5hDo8ZR70Vm-kM2QQlJDZuR-lrUj4toemBmL5PIatbfqQ69z0awPj6II7d8z_hupbmCbhrai-yth4RvHQ4P_9Z8t-Jst9j8ekdS0EgGlidte-F1a9DY1yVnABARDbhKDN5um4TmG2Lqc8v9pNCbrRpZgcFndONhopuMDZ0PwFeD0gWE2UlW8JvEcSU9inXuQWZp5yubslfc-9cMO8ED6LDSz2QVUSqpiDhoYZ7VsaxhrELShF-KqWj-TMTbB09XdIyxGKaiLn12h-uqayJ0tSNjBQWuD6r9PTvmg_RtGs8T9rKcB82v5k0lOw90OI7kxxiEQE19Wkdh7i69hBONA8vH7b1iFvw1rNy3klcjTfS3wlOeG_YfwgcC51kqr5NovTOsiBNwIA5fq-eyPIa8JtpXExCPAcO3TFMunYamBushopfZONye2qB0n3FU5z5yaRrFLfObvC-aIev5TB1vKQ-jgW-qngzqy6hkAsThW3f1rAv2IJmLULEmxUhREX_J1jJINfESg2GNmRggtDZLg0SUeE-ADsNJMAt0y_PInCmdYLFf0PeoPiJhzn9mGNor7tDKrZDH5u0p3A54h80C1KPUDSCLHQ","p=u7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieT2oXMMKE9g7yUOwP73zj1qWWTdoC2KStd6tF9WgRBo-vChlt3J6ESt_mFFQtWbcXwOda6ayT7W_mdidJSmACgz9glsMNfR2eyONk69hOy2FVy_aGs4nlp4I5LNHF7EC1GVeleIKaGNOsruhTDcvhlyeP-6U7f6N0VsgPPmdF00ieRMybljEyagZfP4CwJ3vmNcsN_cCOEPQoHmVVzs7xsDSgGoBZG0tyNNrBxOjCIP1fPMDDXtuFeWdapdS9CYwLUDRdLJHQBU0bQ3R821itflwFMe6oyneQDrSmLfPqpKGhFSYBej8Jk4Q_lI2oTdPlse_tfYnqy-jlJ3ff06Hl7UCpovbAuzWjfdX1JxVm7w4vrORUz9iWH71Bg9N15F-SAmjA86TPq9cVM7uxUupfb3JiKKhy3YBSED4qZxAd8v1qw3TT_5Q5zFrbKrwro1SYlsvNAFSxmz2hknBNbcwK6661EN3Cskud7OCbx5u_jJKGncSQm1tvmPSESiUPcyDuz6zOU9s828_YxJDGmcaa3NJmcZv4t9YRha61p3Nppn1EyaCmBHDGTb2vR7gGAXR97viRelLUIy-Hk_QzEja0pGw9fIhYASO9Y711wBVGpkq7IazKyFpda3BG3VYwbJaoqRbWPoWboNQn6Y7Zlbip-t-RrwIf9zuVRyzIR-dknYrE3Bi1RhaCp159dOwkSp9zExris-tKah318rqPfg7ZZ9pjwSPahLBroD3CgxHziv6b2aQoMv2KL7m8MnFduCA6QiEa_cd9igazL_JgYyRdYlaSjPNLBuXSWeJY9HAhBPR4KBwPvEK7eba6lAFRXXQNsIRsKBoexfjc6g9Pt57CDKqio5gO2LYQUHUWh6XAXgnBIEWYYMvmwYezO05TBZdF7HXtcbfS-t9Olt-YAYauP9_kkgMsefYDX0aVpIVGjFJvJ","p=AwQenZDazcfA%3Dlosg11Nj01rVWEeYLR5CaxrFK5Z7X5XOK0mhKWA1iVwK8RSlzo2w1KrAkvjYc_NQvs5wrfPpu-ei5MO8iMmuHldGd3GE8ukKvlAZxSRH3HrEiQW3gOoCxk2P6g4hj5tfvczMAVXXL9rXGi0Aly4mK9X6YrMFAMOi74QCKxz3y-qyz8oSXVHpdK7CGW_OdFBuRGlmCJMggCFkjtmrRtEul9brE9_DcD9iu8zHMPC30uorGbUFNfTiFrnhhvVyezez3VTfvaD9pei9ztwul2meaV6mjSZ07RnDTJ6q6cscxj8m4rqW-NOgYXamFUv6efZovz1EtkjvnbO_ocMyfQz1A-Mxz0DW8rUNqLWdUoIwCwWNsckxtv5VCTaVWWJ7KT71uK7NcvNv5cjWz4lo7MmUzpT30h-Zk4-x9Yx8tg-0qFvE0ZSqfuYAj8UCZiuBOvVnk3uhp3p2N01k5KvPuss-UPkTx-0_rgkAkdkE3uKRH4kURORqt36sBaRyYb1McdrA9PnYjYGOK8rSv6FxjQiV9dGWgg9hDvcQ9tlABswxsTLDf7BzzvpaIkqOMMMKELSu5drIQM1xDGCoY8Sj4mln2QVQs8uGQrO8yXMW3yRvTpoYj5PCom9eb542l_RsUtSgUYKr1iwVlecjOXG-mh7HWLBGwjEIJvhQB502vIkaAFXc9nAoIbIwP0walXGbjaf5kA3E218Nr6TXkF2lp4_oyP_OD9mEm4vTLdjklYB9HiZgQFyOx4U6UgFEO-eTfn1f2GxWFcbUP_S1gkhDxgKUk9DoXdNDMR_nHiWFxYTBgdm6NGvHigmh_FhBlcxYw7g12yOdIgpWU_QS0mi5cP9Iz4MTz7CiqT0dfSIYVNDm8JJRoRdcljsrGkK0T0oeE8ImTLYyOanTDkSRJllIRtAiqekV3QoyzbHi2LlkHZZnVO5QQTiYHUEIkKuCqp8J51nJ_j5Tgwjd7CgMXyMtymmzvZBST2G5t_0PSRj9vnRKuOpLb2j1OGEFBLg3uZqU2UWA6TK5MP0p1zPX2CtC7T1Otfay1FIF9dj2VWqhmN3O3UNBJOG4uAWhbHBwoSrrfaRDA-kB1ciPhuCfhPKMa4L6gqTZFbqmJWq9B1NZzNGA4kbWrb1X-1c-quHJ1emMj9Hr7wRDFNKbIOJK7CPrNnxy7SfDCJIjFL_2pH0jDIv8DbXjDyfpA778iR2QsncSo7H9Ny","p=EqH-4Ui0XDPM%3DWFJFCIQCB8W5gKiwJCEqlDeq0YjbEsiQIrx0-_VW-1dL_R8OIzxE0-ynasIaNTfEmqFjob2VoOaE0I3ehxwe5XL8w0mVb2W0POcCQqJXJACAJHCUR76_nAAeHIJM3trAJbLijU_vpTPwBUa08es67xjszA3sD7rhmH_3AwogYs995IX82ZwpaFXWWG2y5_4SM8TVnacPy8CsQ6vU_kYclz2iH4NIE031Q5Zjg9k4FJDCEEADGhmqAdl_MMUMDDAgS5IPVvFO3r4K8jHXFiSFS8OaazsOX6X3JBHMHcaJ_qR2ofUeCM2D_IH_80ebu2pEljPtntXq4P6_GQwI0ay3tiYhwfRxxBOJfFhno3Hj4i3xoqGdDP2XNfV3LHD3hRaXVgJYCdwvGFB8rYqu-zBGYHUWqLFrA9YGpER0x8bG7wQPRm2dqsSNF6Rrk99ifqmeNqiZdwiT7LIsG3-sq7x741S13634TgigpfmPStVPIY7f-bkXIylXpi9r9Reqjou-cLocJXo_CUEoZRdlGUVHxDvX0nK0ytM6RHJaAwsF91_g7eYiDhor6aYaikH4rZIC-KwQ2pudZ4DjKkilVlK8PBCOCDNi2WB5GdZSaAc46VQo-El8LRSyqK1WCAOVFKMCS2-sRYNfL6TizVQaa186clU9jOzZDSxM22SCWgM42xcpIlXB_G-3-kkDzxbeBdV6m8ak8_3EhtZbo58dW16a7JjTruSrm9GGgYgLuh4qoagzBhUvsMVZXL72rUEw1HwUgWUvwL-7DN4Mo9mWZWqHROeo7hkAof4DSAHAXMnAEORooFNb2q8vHd-el8Hz9Cv9qP6jTSAQG2Bar2txSNNgmZ-xn5eSwUVtvdiQY3cWq7bIKFP4JGRmeuIiPz2RVwRD8ZmmtmLbHeWaI4GC7lop4Nyz-_z0oaOOOL7vZ17Dma6sfgiun45BQai7UOJXWNdw77CYfmU9S8DUWTTgK5a6IunzJ2K6g6hSvsttoYr42aLVx5JkGtmpOvUa8Fy7NUn1NxwecBZbYJG0gGt5eGdmARiVXKz9feb2qxJ_h_PI32u65toTjyoCJpaFtgvAbtu24lX89K3HntqiN8sCyUldUV68OMfN_WKCORZySL_7es8L4IFmy7xT9cjWxaKSvmVsKK_PblyxBMGJA8GaCcPW1_Mn8A4znExm46uVPcwMKV4Ri5_nksUjw0Gygz2ax7gz","p=y6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05BtymfTcB_sgLma9aUzBMv83bqXYSBm9gvuLBBcehSVy-K6AcEtHss6PvIXsfvrG4REAKYGWjy5Yz5UkLcjQx7b66sCdmEt4B-y6bl_e1h82D0fuZPvAhp-pQbv_p3vxVBs0FYjg6FQLxGYXTjsUof6SibU27McjwiC6ZefJ5GumdYExbxxxkcrfyTMy_UmbTh5qBEDP7B0qAb7G62TiLOzRT6SAQqd4944bPa3Hs05Z4gUrf6DM_MxBqglubH6wD8f7f9CpzZmAl8onyI39LeTYt0lj15l7lOPKYx9ELxnPyhHash2lR6GUwKChCIwN_TtXFaKMf8I2dPKlZhINYkMVm0SU8jEWEZn9Irh86Je3YRkPTl8FxCJ9mDKr4FfuEW2eOQ-cVhUDcJN9tMuKtgkT56F_j6VVVigQkRxC1nHRVDvuSVSI7AL35wgpCjp2NcpCtd2Q4FgbxzpxV8jp4k9mS8TkGnVAtQuvErqmBC_U5BLU3YOS1JKTYoe_yE_sZ5redLsnVAMgKUwyEBmzo6v5ULnyDXFki8ag8ScmRCUjJxgaekr9ve7Fg7LB8S8bweON43fajgkOsC9XosVD274BKmlWQugbj73uLa89yHxjfiZU5S3ID5hn5TkT1NTffykg8z3rhBquIJrEv7_JuFeAtzyZyQyjx84nA1x07LAR4rFSzTUFlUWGW8UEqfUNE2t00wia_lBrRpZ4G0fYvcccpzwGYZB5IdccBKldE3xrMWRB6_PehYOxSqi1i8Pe-u-PAZMxBMT6l92X5LSr0D_jvgcMx9sx3OkrBbYDyoKfyWD945SvlmBOtmVIvm6zLWJ52bzRGFRuEMfdkueOjR2Z-hu-GT0G5jwDqMtmk8x1MeXaUwPvp3WRLdoK_P9x6RFT00hXNYj5dSRKYusekaK9Y-nM-k_FNlc8IYSoX9NLMiK","p=xWRHEiWXZdUk%3Dy_MwkRLXKJIfw9-wp2M1qG4Tpr8WWIjbgDQJ3zUVJ9T2y_rJjkAzqXF9Wcw7V1FHA_9fKqExUTHXqAY_AtAhJLiLBXDDTipHr31M24BEVkM1FARLB9wY-EtApn4JnzocJGtuJDVqdTVIy4u_FyW1nRH9xe3sv59Uff1i5Xjg-NdFBVpHr2qq07Wi6MKPcb0UYnxjqATZHoOdsVON8vT8JqnyqvPSJd-rIwZH2iIX6J9dHIUjF6VkqBMvkE96PezqDbJ5fVFJuK8lQ6_ZapThxuSUkAXONEUSepoj_km2OQkhYmJw-X3FUVn37umNg3vNNIr698k_QycGElUp7B0PW2_b9UjzGTGl7wPk2K1K4MoyTJHemDIBJeCmhBVZrHwJPC2KxINQbaabUP75Y7ehgmzZOLa0ucoXVcFo7LFm6-7QhHAaiDy7mGz8adwo2YHQ6P7_Vifa_7W2c1uqFZGS4wFK8fdZ7kZhd-UaHL3ziJ7UqDqgbF7u23uVubyMo134z_RStoWGa6CKxXN5q09ArwNC4gOOPdUXjW5-o2idsR8vCkozPPg6FHs34aoWTD0VHrTuy9XYzJ6C1TwjPiSk7Il5MzQgyStIwq1QYRnny4wuy9Bi4OsWfyi8BP7BzpUUSAfUc7YSiNa2P0wGhG5MOjhj0D_Q0IjvH_gMOItlnvIIQt2fq1CJeaX3l98ZQW_B-6gYz6lZtNtH-GpUsxVHU7W_Vbw3noQ45AI7gKsZvxiQVdEmPgkk7IIHQ-B3NcwXxv9kgRtPkOHUL__AWTVUdrt3LDT6TIIgbdcbXDVJNAacO_rAXXfOom99OCo5UgfsYeQFCMgheI2pTUVd2uwnfhfRyaam1ZXajkTFnF36Z5mlbEmgq73JPoJMhLcFApxteZ1swPMb1BYWWBoDuPHUjkFnuGTHd6eqoRkyCEAm3tGgqzE_7JggRTZvE3QAaB0V9hhux23-3_IrfOytF4hZ8qdrIYjJAOPDL6dtC1Rfv6cddGRNhSvpHy4IOUX-Z1s_PHblW-I4FnwGcoieP7hyf0Gn0_vqY1wFrSxxm9Du-68K44qWd9-u_xPQXzmBCLhlGSuv3KnOVRcUCKZgoPBsNkS-vVktGSKVsl5wQ8olM2o0fewrxFgMkZXTaf2Y9-BwuUKPJzvHiLVQ3L_Nw9MRS42rVkUyGYVIjq4TXQl9ks_ad25U-Wcu30agu8X9KMlC","p=a7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieT4xwca7_PMZgZ2-Yk77Bnu3yHZw5Gn6Y6b0E3EjY4_J_MS04nh-XrYbNKeHqLf0BTBfQXv4JH954lS97diZQfsz0tEfN7Rl9w2WR9bHj_pSEJzQlMxfd4GLyxyw2g1IbolNeThbeZ1jWbWnFrxxomIkSazJrLWdVF3MIql_FmrhYKxa24lwmnG5pU3pyPwNRTcs6qN1mx1BtfC3wEoqP-r1qkbPRD9MQ9jfsjgCGryFoeGeY5B1RVlccYLji1-lMYnTy43saLyxXrfLE_TfKKCuEflHnkkTIYQTU0QZf17v6IH32LPbMdk01Eija27cKw8bGc1molKpsyQnSBj76gaNVmNiscpFAW8B7-ylbM-LkWJxioYMxaZYW7xcuyPckafoUkXC6SJa78KJAPwSs8_ZkGam489zJJWlbwlMJ6H5YEnEtK6fpvdAmMErceMRjqHepQbJFxwH0KnwcFTWH9aZw3mJ6Yr8hK31PBp1ERSdSSyDTJIOX0NC1NvluNRofZYFvNMAwVifZHgzsHZLUaCumkYuZqOueCTtRCq7jbZcY-vRapEk-CnWnI_mGk5oMO-jvpTac2k00zlnImn16DdPwBkxP12gU6d-b5DuxgUSQlfbWZUwxYO3SfjZD1Xp2RpSVjH9iEMtd8CYWYGwwQ2RH8j2HOgEa82Ozh7S6GVIbB6QvEwhQw5y3A3z6bhQlNke-Z6jJHERnrsRozyNSQLJrvvKiViB-oyjS-RDudAfyeAKeiMK6yid37tGseOak1TupZeWSJTr00h8IFedoY93k1Mm_pFUpV-XWRbBDTGOURgssyNtk6VJGhlcl9GojYg-VnvcSEnVqehWU9h6QWiM_WM6k4CZBNXiRhJvmiOcBUx1cemBZAgLUgPMdVVekIn2vq7yZ1cWQqBoXF3WKHSA0pYOMxGTAkXDHCf3OvZBHF","p=M7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieT8pbQDevB9CasUMBGRhxh8jD1JeR0rs570JYJYbB4pfDnI2L-BqPzTf-zhw29gSKaxANSi_U8qUMjw53DALTtOVAqDYxTQ5IT8GRF7vLfo7ZAKCbi0KhJ5Ckd08xJjgMYF6fTEvQNelt0KyDrEUkZOVV_sE4fH6puYsb3L6ARN2L-TnfpFUrUyBddAk6f3nrW9m0MMMUc5v36TMMv4GczlJqMvZsmhjKGMdOUwBovFzCqPT2uzfREhxTxFv_s_Qy8icV8SGE7DZ9XRKe5dND1LrVyTXGGGULptOX-HiSLZenQTL_A4DcyROTPufPlHUU2bGQreKo6B3OR1dFqvPEyV_Lm_40FjGf5eV2lQ6QLeb_aD0UDItf9Jy0jRLZyGYN0KeILnSP9Z4RDdq638C0j3iQ696mFpH3NWsXnhMRc7FqKFzyu37IaeBfKlSZtp9O6PAm3YK4_2ZYm5Eju6mw6Yq1pMkXGYRqTgtBlpFVPSB8YPTi9BPIT1cO-XnRb8dyX9H8f4rSi-euTFtGn8_ajje5lmkCaewPWBAEzNSvE5Oe9qr6rw2AnDn9tzGIYWJjQhcS1Uk_H0tWW2dhtyUd9POjDe9b-QSgPVvi408EN_hElUUVkfF0FHBG1d-5nCYiWsf5R3KD-ebvTgGo1ajPlNSdP0hkqijm5OdH4Rz1wn4HxVpHz-vNxT4usTEYsyZCXp5yq2VayBwyqS5gup1DUrPQ0otz4uwaWh1VNtbQfgwjRDEG9Siao1eDd_j5-d76LGgejuDR0KE4fGIMCI6FkH6MSrO0jCdlGB-z6Qhnhp2SuxakTzYGfBGyBJVSl5XVQSs8QbW_augvtCMbOhexl_TLzVCvEeLYe-g8u0SSpd4Q0mUSk8GuXxfdD61Em0odF_-yMmpo8KAPggk5A4fR8N2bfCgkruN93hWDSaEzDMY8A","p=W7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieTzAoD_7ac9ijmohmEnk8L3sCA28iKmaGSslPimHUuRsnuub0OFdmu2sgqGgTAMT9hPFoEs4L9PPKHq3G-du74ufk5Tty2LosgH_1ujiNEvC-LczSUvmAvGmRzRmvsmdhrbJHSG8QlIlF2PTeNHYjr5FJ0Gqz0uZpjZ--pYHYtwXp9jSyW6qXTxwoU7QnKVPTWMsEC-djoEQxp4t_Tyxc3A0tof-2VO_8t9RqB0FxzNYm61Nc69XIRkvCAc0ElyPzenjh57o30eNnAnxOfd5R6G-kEFlzUlD5Vti-YryeISUTTDS7Xy9wqD5uNxS8DTVKmQOo8K70znwb3xxtTllpmtak9jeO-mpn6K7jQ498nxYqk8Xy8EqM5IWvJpAeQh-iWS731vjIFL35pf9g-1KxlbsQk9p3NXCQkDaWcq-pspwszAZKlyP3N-Ny1335pUv0Cht8wkdj7i9Y8THtdcghJLy-PA4NQkf90iCth_dZHJ5kOiT3x9NoiUT5boFwqTG9C0GF6MMSJVo7HESitLdQzKap8TEUf9wikj-HTM_-4kw_ryrMu2HTzyg3AT3ROEml8t8rWTTJQqS-jpBgGC2nQ5w1KSp8hoKXwZhVTj6V9BqhbdJgQ2-DHHpnQyZq9D1itLBX7Iifng1Xh0aDFLRcNf8l2acVajO0cZT0gHgaY7QcqiMtSGdcCbD17sqn702IZspve8sLH5lh3RIQMJ1eSwWkp-mF5HcdnnKOo2gANRC5QeJ3YhlqzeH5OMk1oK2Iru_K1bZqLvVu2NMS8AK0UabHyqcAyhX-ff0eY1staOAai21TW8qYKR7Ra9hsvv0TGAM5_Gqe6xZCaQxOEfQmntWn0nVWz5M4PLMDnNHTrVRjP3zVD9tRK9WHoUfOTPVTljIiLBhcPZ7y4Bl4mJB0N4M60yz0UnA2vBuwUJyE94-SZ","p=I1HH-fn083Io%3DMU9bbDOU5wUpeKOKJBGDpcsEVPMwmG0hjafq7lTwSQEuIprw7Oy3BnaiC46WEWM5MfuPIQl_v2OYCwT3_-QGhvrFYWz2xG0QVU9wml4J-5OD_8omucpvpEgfoY4KcRqGZgNdztnG0XpEOOgzPbl5axc02ASBIv_oNnL2A4pjjw2pitWML35VV2A5fCD2QHnXymvb1ArRpTbPNNHFYzTzoUlktoLkunlouGwsHkoAHSMXmjIsTpuTBCnf-NMji_5lN-rJVG1I487hzHRDq-_Txvj859McgEkzRVO7is0syZzyyTPieutnCKUaC1ErfTjNY5oG7wf1kOs6scjQOi-fxtrCoeyNzKChXQpfE9Df-nlULoXv9gxWbN-fYfkUG6akkVPA-3JOYzrirtlLt-TykZgXthRrjPJsaB34Oocz1pWh415E_DeYQ4KjiaypLQ0w0bUpqb9xj6s8N_r-n45oJmKwCQhv5-2V2rNvypG1rh5gLrq6CyE8zKvrlwQPJPP_d9_1uH5bRPdrUbigUhULMFw0iAFgsJC_lYrvm_djExQgdC4LcKgcSNC2pHSNqVozFhE8_xPBQ50UUbHskVndmNXDQhMA7JjL2S_V4L3SCYuSYkyjnTY2Mf6bZ1uX3W8523pU-t3cHlghbC3AJV7l8_Jz9wVuau5c9lFHsySLpEgdGxB8TLToXHegTBsK1N1eg8xRKRRXTpz0OkrbZkRKAcpfH8f7_qL4gwBnc5jtuKGq8XaoNCIHQm6aM07-DcA9ReDeYULADoisAUNDbx7tr3utddGsPALRiFd1p_1LlJUWRLKt9mcHKsVxACRzgS8sQLLOm4QGPexddl5BFQp8Z4_mJkBAQMoWmhdWtMK3MtobA3fWU7FFp47tErBfjSkG7HOd9CVzOBrs541Xz-C3MN3Se6q9TuXLiOuqTQTKzf4K1OjKgCN2I6IgLUZ2W6R-06YHajUfgEd9Jc-P-rzBsv0u0nsLlRepNRGkSVaDpyedCKQhCGyb26y2EfmmUqmU1fPxRMU2vNBC5mFMJlbxmOZKWo42PawEOwyp_-LSsQDitBqXk-yVF1bkWT0be9dcSG8MyyhlNHOyzxICFmJ0xJLIuFf-EAWYifbKfeRU_jaSJCBRmHNvri0sVxQW7KZn3iI9rvCbEyG9wtN3hEmvRzYg1zWKSbf33iKLtRa5bEB7bPWzZHKjmGu8LARRRsS4","p=I1HH-fn083Io%3DMU9bbDOU5wUpeKOKJBGDpcsEVPMwmG0hjafq7lTwSQEuIprw7Oy3BnaiC46WEWM5MfuPIQl_v2OYCwT3_-QGhvrFYWz2xG0QVU9wml4J-5OD_8omucpvpEgfoY4KcRqGZgNdztnG0XpEOOgzPbl5axc02ASBIv_oNnL2A4pjjw2pitWML35VV2A5fCD2QHnXymvb1ArRpTbPNNHFYzTzoUlktoLkunlouGwsHkoAHSMXmjIsTpuTBCnf-NMji_5lN-rJVG1I487hzHRDq-_Txldb0gkI6psYNg3y2EJEin3PAKnOCuedZLVZRVj6ljnXoHmIMhAqrWY1wPQkpDWAIV-QaUj6IVr-3EHlDM46Ya3n30tZlGY6Ldu4wJtuANkWfGYnw8leRJVlyKIzm1dOOfE45cJOaYElh5lwuCIjTIhLHvPwlA_1iJntYQQAsa0vRSA0KO9XV4G8weQXAVBZ_j-N6_6cM9zh9TcmXsQomVZ0zJwldBNnK46ci_J5e3SyqyNpPDXz4-WJlFUOaFlmE3vbVE_UX9q3_ptBWAuhfAESjrruonDt4UIduS7zrver9JLC8nUmkXS3ihOzcoptPCIUP40POE99t9RpJW7pq2JWk4BWQEvEJvGjEJqqWM3OABwXIOLdRFdwDmj0JyXTVp9msaxOntbPyK7ZmhBEYOSx9-a5uziD6Efz3pTJIUsIB_VN9HRmsgFh2LkcwnH93SUQvo0uPGgMTdj4rvXeiGodu9y-7yiu60jcYKHN_l4uI0eqYOWrRKedHfopQ5-b5aZjR7ax-wNzGlXIQICh_6YaHTxEXfO-GoUrikd73wWxow71Y0bihGyDVDG1jvHxwzUyuab4fYXQR4HIJUd0eUQyX_pDZC-28gMgfu5O6ROuPG7-V56nEFUiZe_JUHXlSLWJCFSTGmnnIcWp-Uaggu4lxGi6nwnWksuDlI9yg-aw7wZ2Z8JFzntoF0TOxR69lwapznk_XFlie2Flvp5dswVB_2cY3LNzF1K58kKNmG6KCOY8aPkunl67YImdzpDnA_BdIv4eEjjdaZDxRMaVkh9ou1Nfmw9iy-Q4zHQyY9uPqGjElgJV4hBpLrfdNH2MrtsyJa10uQWIlE12MZTOlMcJWxkkMdyEGIu-8xcrfx85dDd5KAvwxpG9Mz2fH5isqWiM7A4u8vPhb7pVNka6kcqj73bJXleeJNpdKI-MLscN","p=M7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieT-TEpEjY99kvLy-DqrfbYHVpwp21yV_cmo3Wd4E8L1x7Pp644ESLwwSHUNJGonBCwy3VMfd0HMPO7fQHjqeb4ZKMCCSBNp_iWI5GXy-vyIaLCEQf5DywIRFJeZGyawzGK9KVZ269NY_KkgoTiqYEBbP8img75ElwoZJ_RT3uB32znNdN8BFMJ2bvtnzGF6vZK6nsEEZYEVCGYLrQANYwy374IpRZhYXTHI-5kOVvTq2rH6eZD6_t1RXgeEY7NXrihJD7dx_ktT77tfLmgDNv4C5XALuQzctnD15qWrUSvdG_M0rBCQwVX2otkGHVbujUp6u7dJ4NR9Y5auBtz_zuByzGuLWoO3SIFV-JxLH5uMThGiAAu21ggBj32tLsdIoI3KZKmCq7j05k1-_6NRpAGum2T_fIyfne2GbJyol4sxdJGIlEU9W2bCCUUiW_NN8GEjxyZkoIgnptRd1ADlc0sWyWf_SKsGpJYhI7M71xjKlo0Dp2v9IHABRDFJnThbm44mBdfo99nKKkng3w7R3VMghZwOhLIeM3Y9k7OPC6fTGYylAUCJeYDpJD2yOFSjEbxNlWnmbEUkmZiJT6HTaVPGadhbYCdgUonhA062ZpeDTXW-L60N4n5enOW8yVulafajzxfCKauWmcbxQ8UtQ4f_oy6FVThxZSjTbCmHQOZOuHd0resmpCNfv_7rHEpYTufe4YbWlrnF9cQvya0DBLCDqSNJE20pandq0MUD3l-60OXlpexmZ0xWcExdRUNJPFZMgGIjQnOU2q8LC5_r0HesbOwZQ_OKDN9khPxhO7qdg5wuEtTZ2TnTtrH8L7locZw8JTj8lVEPEiYhtNUGjyCOUWlufHZaGuSCrNKJRoyBsbBbhdcnuDwI8anp4XKCB9AxohMCf2JLuVEUL2c1JtCxiFkEPmEJ0_ItRbAdmtEV9Ew","p=C7jvhIkVyrvg%3D3ZHO5u_xLN3YWhPACjyR4hFwMQEw8RFiOsW9TYPs2LMjpZ66ggUob_0C92MXEwbrrPqwdzfKV1zMugzC_5wIlTphBQ29qAhNqFyaP7D6VAkTXkRNGxJ_EFe4QIW2hqvVsNFPpgAEJTMEidQrsuc3XC_ONDXEFQhtzDo1eTgSjb0Lm7XFjNMzUaC4pT_OzUF6ewhjvYYhAKKPaTIXpS1oUgNqsk3urlHn4siQUuuTQiqDuQis1CicOJVnD3OlQ4iq0JVkBzBF5B_7NKGRgGieTyzS7dyzXRKhTG4zAbiLLkBsa55wSWuyzgS_j1wPlWfw47clabVbK3q_LOBUb9zyO_MexZ1sF4SbXx8oA-tJDVais2h3s-4cDDr2R-XOlROj81yWey0vvqhHgAhTPFOwDQFghrhGHho3sdQc1CTU09FsW1QpKIjPF-q5cJBU7MfohguiAyRWcxpC2kRK-9R3NrGceNq3L-Ot05fXahCt7jkkM67VB0IUmpuWikeTwJWwiBSGPXv74amtB-QnpS0_puOblpPnro8KpJ7UkjX0V59Cwrrfh9pBENInSxrzqbil1mz06Vxe7TEkCkYC-5WIY4v0-xDRVPOPwXK3uQy5IJapcqlWpRAkOl6zH4gLpxopV-Jvw-7ShAkgKYFjj9skk017RMlbTuEDFPV222G5GEJpqssWlR8IuFRuGfbWjkwgLivfbQhYLECK85S5th9uhOouSJ49gyWpzQX7Z3QLI1dmY-5Ef_8X36WX0VcsXp8t5rxtIoJpIZVxfw7SPNmdcDVqCHkzTIiTF8XdP8UcZHX2fJHWwu6-m53M6QgeRgI6FpaorUGyqy-T-jDaNv0xXF0-htT-8GpMKEi02q6aO5_7N3pNTBSTXE-KdFiTBLzWRrP3PsELJVDbzTAi_skmY6-UZBTkBdWaucN_-4Hs1F0JLoI_Ra-2u1_xBMS8Dy_deFzRRdAFeoVlUE9wlDBcL1n2PZEkaoOkV_rzCJvkSIOcIoQrgpmCGzM9h7toJM-0D9lNoYjvXznKhpyMpFkr1W5Q5Mm6420aYJwVfYdqjq5jCBapglN0v8iqfwx0kAIYp4lfmoyiaS3eYKXoVgqg4s1y5YuTo9gW6YMPEuPWFEsD_2X3rbbw-teYxeqTXElUa2czhN9kBhEzr1UUdvsya7j5sXulStJGZRXSJY8rxCKsdgFgK_bOgkrzqW7jB6rmV","p=q1HH-fn083Io%3DMU9bbDOU5wUpeKOKJBGDpcsEVPMwmG0hjafq7lTwSQEuIprw7Oy3BnaiC46WEWM5MfuPIQl_v2OYCwT3_-QGhvrFYWz2xG0QVU9wml4J-5OD_8omucpvpEgfoY4KcRqGZgNdztnG0XpEOOgzPbl5axc02ASBIv_oNnL2A4pjjw2pitWML35VV2A5fCD2QHnXymvb1ArRpTbPNNHFYzTzoUlktoLkunlouGwsHkoAHSMXmjIsTpuTBCnf-NMji_5lN-rJVG1I487hzHRDq-_Txn897L3mh8YGvZNPMSKwUgIb39ejpYOp-Dnzq2S-ERHspn0u_YzwBqJZ1zcd_yqNnzGMzN9RxMLAoULW03YKtVvlDuoC6u_iBMgi2eo7W3vLPhq3gtVWPrTC6tQsW1YCfSUoxSfSxD-1jLtPnStt4N0RG9XHA1SMn2wfS7cLhPaRbulGU6fjcuMz_pECWS-CYRah9USYJJVxyeWpOheC2RHUEjZ5bxmprgD6-6TJHgUPvMBtm9sAwEhFm7hoDWTQVOwNAc_p5ICQgzHm1vyWpbzfxgNKEWnD1oUe849MbVT80ZE2PRorOQZprJdJMbiVB3VMuiUm4hMMHEaQMiIotznyvsU3gl34ckArVc3bsdp65ZZt62nzwglpycZHG9Fn1MO776yrhb6z4HW1GfQOIo7rrByEWlN0JckQfYuqkMC1W1QZ6oBizZ_Cp-uAxQO3rQID9EENG5fynofAcgHmGA0B7Vl2KGJzrp69x7YCimyXqmwvmi-W7aqWpkTdEiOmGK_rxVopnANZXhMURT-dWCXw0bbituVB1sp_CPIGfn3wmG-UvBhYMX9k4ssf-qBkR1A6ogB8KOyOiE038ICVDnbIqpEa6WbUyrFzT_m8gNrrUZboa3EJta4n48koEEQaPvozluXGua2qmb9u5Hx716Yd-9r9SMIKLVXOt6V441ptCNGTeGlAjyUz7BayEkM9c3B0tjNAUN45ngT6zCDeCi2UCWMHYWqPp-IKFiEqZJczRv-Y6HPQkrt3q08WTG9o7h39r_i88ocFXLNFJpOa6gaqOy_nvsgepwGrld9uawOoL2vlW_WiV3bdw7aEb_hHlZOr7qOi1bkJysTcCKZa_3xSZAgh90pdjow3WwG9ujQ02yAprOdreb3wiR69rtUrXD0qgOc7HvWKizSfYdIQJxL00Yvil2Dk7XO_FRsATxY2","p=XCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9Hee9DyYzBEhWRI-pledCPz6W59wKpnqSQNSVF6BrZgMk02r4XdmH9A4Nfr3H4DZG5FGY83Qa7Dv1pqs_gdayTXWFzVkTlqjF3pWzX-NUMJrLIq6x9hbYZFGVAGbuBFC-sV4IAQvp-l7rP8lPIE6dNZk_BlUbJ3gLC2Cm2ePfHzujbVCLfYGcAStn5hBaZS8S1F11jTKJte8ZGu9c28K5Ysq2_kmaMUBKwBOJzyiLbU7rvsz1rlstpVTO1mS-f4nmzLapRsb-M_odRJM3rat9DpT1lTPnpZZuWKGXs6XGJVG6qRmyJjtECljA1LRIj1x_ALh2llC3Ck4zgS5NbsTNduCOecmKIzbLizNpap4OWPb2wvWpGQWbr3xdntChTy1sfEGq2KIL76EbiPdvbSPDbMw4GI52X8JRo36A9c8zYmyhCjHxGn44sSlU0miK-cQkXj1YlEuRbMaCySda0zOwFEGC2lLkWne7umeq-uwj1rXSR9Wd0L0oIEG_POqLWETLApkyX56pKx_BU8s1V_pRufEXAyvgbBkY110L_GDhYCeD3op47NyVXf5bB6X0YEzG59WjHfXS0mDGb5WgrPWVDAB4mmPhJikYMFzyKS7Vzkbwas3WAdZqFbf2JMpGWK0AVTod7jMSDbIb-Bd4hfSxbijIayqEA8EY6RIMI2nyJFgzkRu7ClvphUpSiYQklPZnnEeDeS9kBZneOGXXRLKIBKRwEPgHahaCtlhr9FgdKkvDr3g1U-shkaMLrwhtHpokcZx1XT5cUhp6A5oZ7IHeOhkKkWSnz-9aj5JzOBx6LpC5T0cTggfFzrgbpobFWJKoE_MmM1kdPFOcSraZIFAyguxZCxitpXiogOiTthPQUxqbG9DtW9rBPsf3hClNLl_uAasD1SzPgC7RXcwHYHQl94hE8jPocGZ3uLL_rXtvwn6JxrY2","p=44W7v2WlUNXk%3DuUAtPFIjpWN7Gxpd3WZnAsbWawUb4Swgd2RP_RWYN8OXVFSMdglL3XLNIYmheUp_Ajbimvf-b2qi_Q2Xyqws_rv1L4aPLgAtT5d58-boPeAzG4ofVTFBcE5ePdAei1wUrO72b6iG8m_sTvZC6CbBB_7tkUfMoMwzwkuYXq2cEXlbmgPsURH0LzEaixhaZcQG2zC-BQPLmxNAkBDPF744IZBPBpc1FQY_6gYn6iPb7CIfY1wiAsLxELYC8KLrn7wp7KQQ7mbhG2XzP2quJlTa-kjPxr1Y9IMW2lM-PiveNpkIkpB2g769cJwDbO0Q4rwVdmfm57KdcxJmLouiCnz7l4L1dSdDnvZiS2vZZc8rfvf5fsCgH4kRGZKAjZobWocTM2DvPZ_yMfMt7TIYl-gEuGYqHgjbgt2xpw-7UhnHj3ugM0X_BpDKFNAheJkk2mSmENv-u5eSFrEcIS2q-qFAY_-RXOv9F2S6Tb7ZrXZjlb-NyDL8Bm635QtGEueFlp5jFMvLSQj0Ny1qjagJ0Zzi8tziMj2yCbCep-Nh9I0cdRTLYByjUwmWiiMVq2J2g0avC7xWl1oIWZ_AXXdQMHZdkxgpfDuOd1FQdd52vhlONb4-yzmhP1_GNv8iojf7vAFgjyjdTYnPyTw3NvxvPG95a4Tq74e4we_U1VN-8KMA2ff8rxL0l69Kk9f0n9g2sTZRIBlU_YQIl6p-OkSTkxgqwOeNG0tZ1zKNw-grzOpdEq1JvDlvrWsnHUdnr8hLugSCw_t938q5zwFho7rosi0sO5AcLBECP00c0-9FXzsrDiEFh3_xM5Qp_7Dzh6VX32zQPNSeWcR_IJTBc0OnwWtrpw1yCHai3Rk8GKoLezvvvSsHeoj9MDm-v51Ad22Tc_NpQrjVZHprKyEHYcm_Wkm33G0F2xImR6712XXIDZ5c6dhy4gYUK0C5SxUoV1fPJbjjz44XmOtQFOcMaE-aj_G0NEaDJf9W11frq2b1tazM8C6aBzAStcHIZR1CArwcgHpEvrgOFP7VOqzlIB8lQHwTBEW3rnzhIWGhkAoiU_Ioz1gxpo3MvW1HseFi0Q8X3UjQkLYqSX-2HBUFBbsml3gAFTYmF7Qnq59UEcLdIVwCgkKfMflGwbRWJQTvTP4f9vRA8GrCcDH4IEYLniZ_DBY-utvuEwS6NhyrHB4tc9ZWAJYpKSnNPxrKFJlY5pmzsizdIc","p=6b9vgm3fvNuU%3DEwEuv541HjotjspRSmvRUSyXxzw1E0lKVnebg5Kn1JewNpdKqLXROxvlxJAVdejtlfBNUv6_PwwPqtQQsXopXovl1pZCnnZQQuYDXYdIq6f8rYfY_Cqn_OrgzwTqziewsDWLlVKpuAjkh2bSWFNZzeFwjV0Wuf5yTU5tP2IDIizUq91SrsBc5AiPnB-SiAjAWIG6O7Jn1aaojOPTSymuIv-xmVYbn2z4PtXFi7-2VIjDZ7I-WpSU24wsYTgRa-eoKqHDKJEopKp_1TXeiC8tAdK2kPiAzyC7OVoVV67rN3nsorBRIF2AFbRyNSC84-KPxfR8aMdJZkq75Ee_wdU9pYMVQ9qW5UhYuB0uF9X-INTsck1qxBZ9tVv8Auql0LjgpJG_xht-RYGRDH9Rsb9GMI2U3bpinLNvQUe9DrU9OeFbqBbmqzNQqptS4DFM1YicnEMV6YJAYNDSdxxQugrrg5vhcZTCo6e3vya90GBMpymWDbmWrF2jm_hSeNALRRfqPDAXuB_eTCZS4qNpB5OJsSmh1EQmDb-59c22ibibWQ8d1l_4HiOgvrKSHCm1hz8xVjBrsAwKzWdr2e3At-X8wh76nOs_aVLDJNWNsJbojhe4BIIY9gTFqbk1phFR-AEaoUJlwc-jLQWmJI6Jb18t5XweSN1Fj94uy1Yngpctrgd_da8i8xvafPD5c1ygp_LruIH9Lm6yEpA02EPZuo0muruEuSM6eYdR68OTZIXaKt-UCxLEfwJNhTqxqxMXF0feiJneMT3IR5DluCsSMBURhStNFEnCDq-1DAMTvhuJT82QpTAdQDaFmUFOv07efaHFep6D8G7GcaOOQsPh3yP9RHq5PRUXmZgu2p_lFc022OzrRLG-wCofUj0aoxT1-SpFIDnKzzw9oMrDhXpNu4AEDMQ9KNy3OIRLNQg_iK9C6CvpZda_GZiKgcaXbh6oegbIPy99LvYUk_TzOfO6h7jvJY32dPK_ZPun42hdUSzQKXt5y0OXyOcu_niSP4CHDXkw0a4bV4D2lUjKtsV9IAEVXVZnfIR3DR7nVtc6iaLb75bGkUXPJgmMRUVWIIo_Lp4FwsiY2f7v320qRTJnp-3TTBXuMhkv99HUag0GjbaEABO7XspxMB2z6auVDK0hlzznd-eFLfEAok-K2Xk6YWDmAH8KKBjfOfU92Y1RmAkugOe_M8IBqFuTJPQ5vtrZ08R1X","p=44W7v2WlUNXk%3DuUAtPFIjpWN7Gxpd3WZnAsbWawUb4Swgd2RP_RWYN8OXVFSMdglL3XLNIYmheUp_Ajbimvf-b2qi_Q2Xyqws_rv1L4aPLgAtT5d58-boPeAzG4ofVTFBcE5ePdAei1wUrO72b6iG8m_sTvZC6CbBB_7tkUfMoMwzwkuYXq2cEXlbmgPsURH0LzEaixhaZcQG2zC-BQPLmxNAkBDPF744IZBPBpc1FQY_6gYn6iPb7CIfY1wiAsLxELYC8KLrn7wp7KQQ7mbhG2XzP2quJlTa-nxMy8ACFVfqVv6010CcV8h5bB3lLloSGJJ6TkNhNTbZukWcf5wiQoC1KYkgIXKHPvYgrNeJYiBw0uauu0fqk37Ei_93ypMCzlHXPGbwSZM87Tj5B8SEAOLGy-VKZhOe5mCMjdMAUpvWQ1LAByicJDadTPXeam1tieAtb56-sUcen42wcUkES8N_6QpzbaR1p5W8ymJRnVRquaIE4E1Uh4PoiIAL55v1n1NWQfXdyRNM7Il0sNmpL_ca9NCyHtiBS9z84H7YnLAGTCbMjlkR1i3RMImrUaZcme0UC3f3kYWKhHA3AVgCqEDqSRcUxdq16_baQicwG8vydBFkiXODmq8u7iS1GxkCAIXid5XvDINXYEvbVLiH0E2e8EGPadXOHPtRZhW0Gm2WXKXd2skiTqhaheAaNGjblKTgoOtVN9B6Azvr66xNwKIXQ--IyCJ7YNOtoLDeR_Y9lNKpLLkMt2MGktnHXTcY3SowcrMjYpktXIF1ayop6njcvkey9lO-OqeoxJ2shp4PiB6QwHU4mcc2AVuQq3hTtaaIHFKL1F_k5rWSd_QJ7u50NClrwE6kyF7W2AvcjuybtknDjZZnjnpHbpkUZcpwBu8cR0SARjPPW1rymHCMoVCPoSPoEZSKzAiS1vzggnhuK19fviLCEuGEcDbddls7_hnApHPty1ixYK3JCk5L6z26P7FBsntOb2gdUX0GQE_mPTUevXS5z0trHkFqAj489V8m_OLBS4glyaxjejWuNh6vfBgkJBYH-LZPDXHcr8_KpwzXWCygZVYofEmSlMc4whqsg5g_t3nx06RONtTmBcCNbLHQVyco2dQ9hfzingd2LT2pGdzunTT8ZzRDHLcxGo6L245unyULhM1309oLQOZLGjswf4u9bb8xrHTzLkJyRM2ECfp_4mSWMcox_4TPtrkXhAjeAv-E4D","p=G6NplMcA3HQU%3Dd_ku8kq95zeh3WrueNh8xyMr2_YXgBunro7KxUYIIxByXEQmJm9geM3mlcAiwRSHIvrlsFI32JWqLunbU7fBbGDH2FU-C622p5C76h8WklDnOmepY7lUsmKXiaKlUWN6eQRq4bANdQP0qqCWG9UyFJlYPNm7bVthIEPfT1cqxdqUasz7zyzDoNVQjUKZV_aW_TVx3GgyV5zd2KpeOll3sE9GkwP-SA2BiMmdyPJw97Lza0hU_8O1NJ2ovLHzZGnenOTiJjL_19AjdcdEs05Bt0Q27-2bpRAwxM7rdP08y6qmkfmJN4br3uKj98zaQAbTeV9cVNWRtvdHpjxiKov9jIp21c5lJoSjRIhE1erpzSudYNiK_o-tS2hMpohCDuHlocsIi_4x2pXFZuism5NVHoaKHK_Zdy4D_lY6YemUT35DW89FLQmlER7pP9Jiej4vzcm5lcWRhXqSyZFZog7rPTBKHUE_ZyhpbUwXC32cxjQ1yC-Jzt0wxY5N1ppFw5vmUpR2aQ6Z6y13cRXBC32SLPDL9mENr5TxtNYQKvGVqXt3NR5AAIjbf6uUBCMq-X-Frv13_58MwBicz0rF-1WPlCVdeuRupC07oOLvWXqJGF7mb-V3sJcB9cH-U8h1y3dSP2rCAL2TUwWG-5DtnmN7ofE0CrkTSpbk44LK25QDIyK4TcBic7CZ5HMxbguk6Fra-U049ZyMT6ETaCBA67Tsye1GQtIMbC5JcGgfSRcL4xOHINkUAnWPCy-K6Zsu8QEnBLgNBnoRTu-_qrw3V-TpEmH29CMbnToqPS1kQ9CBZPv0C_EQtOS_nEj-XbgNTMFMVLaItbLwvRs_Db9g_PRPVnrTyUNgg_cJTPXo0153X3kmLWdHypSt-mW-RJFH_2kI8-2dV185QD08tyrsoyU8iWr3DG5mb99deE3whaLZs5t3LQT64lBr9qTPN0cMsOZOmDrrxfE8km7NC2quD1nPPfHM2gClcnIgK6RaZr4mRWs7xgyF1cVXIlESJ9l5vYA72IkWcX8RUdoWapmxf7OjBVksvQYJqeMeKjwf3L3fJenhqiVQnUOAk93Nb-0aecW-g4pxZq7ekzYKp5ShjBoFiYN_TyUJnu7InddUi-5aipm9p1dl7y7gstInBnE1tS4_bTY86ez-EbaAI25QDAHuVBekNiXmAhARZ-kF4cAiAmTKmicEX7IAHS2oC3zOSp9km","p=DCWzFwAroTSg%3DcJ9xcGX495V0UNqyWsojX7v7DKfGVK1uMRhrfTqmAXMGIGh6G63m2KkrCw--gEenKGYOAMoVCsOaqzBkfiCAzuqfJ3FdjfzVZQj9Dh-XJP7qBMUsyiZM2ayle3mtZZw33XqkmOKByrVbNIF-fMxDisAFWEkhUbftwwXBovIymK-U9N1SSzqSa_Sex78j3YkwcuQrVAan_IOZOH9EGC6nxxbQDPz0v4E09eFi3JwirG3cTAnk2lW5Fukbkn9cvTTv9vlBQWuu9-IiNK2FB9Hee6ljDm0_unmvtvDfGR3cN69wOn_0scuL1L1fzugj3uCaXI5x0Tti-3ywsuqvgAmi9kPU9pFgmgVAVlVpFmO8jZTAwS-zWOl2uqHSQ6oKSOhad6gMhGKRMyAfx7MWg9mkFWh5jU1-c6fVM40Od29ykFF0Px6qF97kPCSyHHqKN16asYJ3S7zC2v6-WrJmpLJjKsvQ-PjZogi74EIDPX7ULuyA8B5DpGss0ItqlUNGKbxuaDrvY-WldSzXmlAMLFrShjbEVmNGnilK0lNx3jryiPBnDxk7smLFUQFx4QbKE3PGvD0lBsT1FtrvIJWAfAkguYE3zORZK7v74RxDvj4BaKu9HIfnY8uO3XyfQmMb-2HQPUB2KDORebS3DEMgz-K1IXyNyKbSwcdcXt6WWF_2G5lSc9Mztc8MyJyvyeBcxX_6wO2sLqKmYuy2Pmdzxqb2h7YohfGF8jUqboOFvcOyGkgfnDfpQODKQctXNUfcvDYN4Lfb2Ou3sLFuZeAoUeAR_l6vx5aPqWfDSwIcq8qR6xZbi7Xc6QdkSeOHaXk7-CE7n3g_KZvBlYwCnJKmq-cDGkuqCkDlfYE3ucxD-Rfo8MkGhT8wfs9mS1HirBIa4rakv4HJ9aAnA4IUP10EL6TQNDtA_HHmjODTSIfOSjoWQrHEspC3NwsMbVitj9-GQWzBrncISAUgT9UsHuVuryLdSfszblDIVoYp9PRmgbzxnGYI9uZ33_vxjwsxiFEqnc5rytAcWqp30QUU2vM_FHR6X4Yjrxky9wPSlYMVhZc9y918F2O9n3eQfxzYfh2jucEl57YYBH0T6RofJqhBwFhMuhD32frbVyl3SguCJwshpnC56vsBMvgUQqI50s269LtB6DIqs2gbXH2o6KpHRx-FoLAJbDdp8yA-RsEA9lGKhB40pDAdHEA0BnIlGhLta946Mk","p=FWRHEiWXZdUk%3Dy_MwkRLXKJIfw9-wp2M1qG4Tpr8WWIjbgDQJ3zUVJ9T2y_rJjkAzqXF9Wcw7V1FHA_9fKqExUTHXqAY_AtAhJLiLBXDDTipHr31M24BEVkM1FARLB9wY-EtApn4JnzocJGtuJDVqdTVIy4u_FyW1nRH9xe3sv59Uff1i5Xjg-NdFBVpHr2qq07Wi6MKPcb0UYnxjqATZHoOdsVON8vT8JqnyqvPSJd-rIwZH2iIX6J9dHIUjF6VkqBMvkE96PezqDbJ5fVFJuK8lQ6_ZapThxve8xxcnDdM1AYR1wOHo_LQsMRZSLUzoX1AH26hQmftX_Bj-VLE72M3019bTbdY2CFNsILSTbWA83BEp_kyXje-TNvnAo__PR_h-YIgRCPnpHv7R2rckkBWh78knbhG4h3ZAMIKn6YG5Bz-69avCW8P_j_If2e0J4UvLZiyDG4RZJLSPto6TTzRQUIrEtyGdxYSGsZCqKhmupK3sL4xtOsNhGDbHMwuUespkYv7eBpFf84DWsYcGjyGVSPcWBUOrXtvQ4qiu3UoZ2zmsvUQ4b8fR7y30NG3uQfs7wVNk0VZfByi_39AIDIzUmnrFG65tjp4IC5prLNVSBY9_Rw8SZJg91snmLTTs07bLthLiudDmItLoCxj7n489mGeresjMJM4XkWZb3Y-7jeB1T5YVXLGb8zXqs6rHoKcK5Q9HWK5-q-WvaZTCMuX597vHozBXW1ZDlgqctLSAvSb7vZNSrOzs0WvAOklklQhYAvsOg7sjWvbY9f2O2Arusds5AEVcf8m2VicsHIJcter12MZkdU0bpkTgBKebbLppTjul6enMva1_KZIoU7mYwcr9Vnduuxny0caaRopkbXxbkClpzjqRjWTNEldWKfxsOLE8Sxcr8dYRrN_JpNbOinxtYakdvobGDFc8EwxUzVfLbhlna6Uqxx3buR5LNDra7Xa2N6szYxR-VlUfykHqcnApjebi9VWZiZJNM_-Wva_yLX2KBny25bN042NXaPgGj2M96t7Pc0-QDctIHNf9s3ctahQgtqkCTyfrkPJXDuBZZhaT5EsZSLIOxK7VH7njAD6mIjYL19doQjDZmXwHglmrEmIc0VH6UoyABhkcMnnqm56EJV2GVhlpssC6ZTTn5QUWncby2iNpOryKUPpkT4TWVFxMgFWUHq3DpbI0gwcFGrv5VromZ-CO97iVBl01OUTtaQzJ"];

  Object.keys(YouthBody).forEach((item) => {
        if (YouthBody[item]) {
          ReadArr.push(YouthBody[item])
        }
    })
      console.log(`============ 脚本执行-国际标准时间(UTC)：${new Date().toLocaleString()}  =============\n`)
      console.log(`============ 脚本执行-北京时间(UTC+8)：${new Date(new Date().getTime() + 8 * 60 * 60 * 1000).toLocaleString()}  =============\n`)
 !(async () => {
  if (!ReadArr[0]) {
    console.log($.name, '【提示】请把抓包的请求体填入Github 的 Secrets 中，请以&隔开')
    return;
  }
  for (let i = 0; i < ReadArr.length; i++) {
    if (ReadArr[i]) {
      articlebody = ReadArr[i];
      $.index = i + 1;
      console.log(`-------------------------\n\n开始晶彩看点第${$.index}次阅读`)
    }
  await AutoRead();
 }
   console.log(`-------------------------\n\n晶彩看点共完成${$.index}次阅读，共计获得${readscore}个豆，阅读请求全部结束`)
})()
  .catch((e) => $.logErr(e))
  .finally(() => $.done())


function AutoRead() {
    return new Promise((resolve, reject) => {
      setTimeout(()=> {
       let url = {
            url: `https://ant.xunsl.com/v5/article/complete.json`,
            headers: {
            "device-platform": "android",
            "access": "WIFI",
            "os-version": "N2G47H+release-keys",
            "app-version": "8.1.2",
            "Content-Type": "application/x-www-form-urlencoded",
            "Content-Length": "1101",
            "Host": "ant.xunsl.com",
            "Connection": "Keep-Alive",
            "Accept-Encoding": "gzip",
            "User-Agent": "okhttp/3.12.2"
            },
            body: articlebody
        };
        $.post(url, (error, response, data) => {
           let readres = JSON.parse(data);
             console.log(data)
           if (readres.error_code == '0' && typeof readres.items.read_score === 'number') {
              console.log(`\n本次阅读获得${readres.items.read_score}个青豆，即将开始下次阅读\n`)
              readscore += readres.items.read_score
            }
            else if (readres.error_code == '0' && typeof readres.items.score === 'number') {
              console.log(`\n本次阅读获得${readres.items.score}个青豆，即将开始下次阅读\n`)
              readscore += readres.items.score
            }
            else if (readres.success == false){
              console.log(`第${$.index}次阅读请求有误，请删除此请求`)
            }
            else if (readres.items.max_notice == '\u770b\u592a\u4e45\u4e86\uff0c\u63621\u7bc7\u8bd5\u8bd5') {     
              console.log(readres.items.max_notice)
            }
          resolve()
        })
      },s)
    })
}

function Env(t,e){class s{constructor(t){this.env=t}send(t,e="GET"){t="string"==typeof t?{url:t}:t;let s=this.get;return"POST"===e&&(s=this.post),new Promise((e,i)=>{s.call(this,t,(t,s,r)=>{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,"POST")}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile="box.dat",this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator="\n",this.startTime=(new Date).getTime(),Object.assign(this,e),this.log("",`\ud83d\udd14${this.name}, \u5f00\u59cb!`)}isNode(){return"undefined"!=typeof module&&!!module.exports}isQuanX(){return"undefined"!=typeof $task}isSurge(){return"undefined"!=typeof $httpClient&&"undefined"==typeof $loon}isLoon(){return"undefined"!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=>{this.get({url:t},(t,s,i)=>e(i))})}runScript(t,e){return new Promise(s=>{let i=this.getdata("@chavy_boxjs_userCfgs.httpapi");i=i?i.replace(/\n/g,"").trim():i;let r=this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout");r=r?1*r:20,r=e&&e.timeout?e.timeout:r;const[o,h]=i.split("@"),a={url:`http://${h}/v1/scripting/evaluate`,body:{script_text:t,mock_type:"cron",timeout:r},headers:{"X-Key":o,Accept:"*/*"}};this.post(a,(t,e,i)=>s(i))}).catch(t=>this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e);if(!s&&!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\[(\d+)\]/g,".$1").split(".");let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=>Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])>>0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\.(.*?)$/.exec(t),r=s?this.getval(s):"";if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,""):e}catch(t){e=""}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\.(.*?)$/.exec(e),o=this.getval(i),h=i?"null"===o?null:o||"{}":"{}";try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&&this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&&this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require("got"),this.cktough=this.cktough?this.cktough:require("tough-cookie"),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&&(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&&void 0===t.cookieJar&&(t.cookieJar=this.ckjar))}get(t,e=(()=>{})){t.headers&&(delete t.headers["Content-Type"],delete t.headers["Content-Length"]),this.isSurge()||this.isLoon()?(this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.get(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t))):this.isNode()&&(this.initGotEnv(t),this.got(t).on("redirect",(t,e)=>{try{if(t.headers["set-cookie"]){const s=t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)}))}post(t,e=(()=>{})){if(t.body&&t.headers&&!t.headers["Content-Type"]&&(t.headers["Content-Type"]="application/x-www-form-urlencoded"),t.headers&&delete t.headers["Content-Length"],this.isSurge()||this.isLoon())this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.post(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method="POST",this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)})}}time(t){let e={"M+":(new Date).getMonth()+1,"d+":(new Date).getDate(),"H+":(new Date).getHours(),"m+":(new Date).getMinutes(),"s+":(new Date).getSeconds(),"q+":Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,((new Date).getFullYear()+"").substr(4-RegExp.$1.length)));for(let s in e)new RegExp("("+s+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:("00"+e[s]).substr((""+e[s]).length)));return t}msg(e=t,s="",i="",r){const o=t=>{if(!t)return t;if("string"==typeof t)return this.isLoon()?t:this.isQuanX()?{"open-url":t}:this.isSurge()?{url:t}:void 0;if("object"==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t["open-url"],s=t.mediaUrl||t["media-url"];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t["open-url"]||t.url||t.openUrl,s=t["media-url"]||t.mediaUrl;return{"open-url":e,"media-url":s}}if(this.isSurge()){let e=t.url||t.openUrl||t["open-url"];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&&$notify(e,s,i,o(r)));let h=["","==============\ud83d\udce3\u7cfb\u7edf\u901a\u77e5\ud83d\udce3=============="];h.push(e),s&&h.push(s),i&&h.push(i),console.log(h.join("\n")),this.logs=this.logs.concat(h)}log(...t){t.length>0&&(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&&!this.isQuanX()&&!this.isLoon();s?this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t.stack):this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t)}wait(t){return new Promise(e=>setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log("",`\ud83d\udd14${this.name}, \u7ed3\u675f! \ud83d\udd5b ${s} \u79d2`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&&$done(t)}}(t,e)}

//   else if (process.env.JC_READ_QINGFENG&& process.env.JC_READ_QINGFENG.indexOf('\n') > -1) {
//   YouthBody = process.env.JC_READ_QINGFENG.split('\n');
//   console.log(`您选择的是用换行隔开\n`)
//   } else {
//   YouthBody = process.env.JC_READ_QINGFENG.split()
//   }
  Object.keys(YouthBody).forEach((item) => {
        if (YouthBody[item]) {
          ReadArr.push(YouthBody[item])
        }
    })
      console.log(`============ 脚本执行-国际标准时间(UTC)：${new Date().toLocaleString()}  =============\n`)
      console.log(`============ 脚本执行-北京时间(UTC+8)：${new Date(new Date().getTime() + 8 * 60 * 60 * 1000).toLocaleString()}  =============\n`)
 !(async () => {
  if (!ReadArr[0]) {
    console.log($.name, '【提示】请把抓包的请求体填入Github 的 Secrets 中，请以&隔开')
    return;
  }
  for (let i = 0; i < ReadArr.length; i++) {
    if (ReadArr[i]) {
      articlebody = ReadArr[i];
      $.index = i + 1;
      console.log(`-------------------------\n\n开始晶彩看点第${$.index}次阅读`)
    }
  await AutoRead();
 }
   console.log(`-------------------------\n\n晶彩看点共完成${$.index}次阅读，共计获得${readscore}个青豆，阅读请求全部结束`)
})()
  .catch((e) => $.logErr(e))
  .finally(() => $.done())


function AutoRead() {
    return new Promise((resolve, reject) => {
      setTimeout(()=> {
       let url = {
            url: `https://ant.xunsl.com/v5/article/complete.json`,
            headers: {
            "device-platform": "android",
            "access": "WIFI",
            "os-version": "N2G47H+release-keys",
            "app-version": "8.1.2",
            "Content-Type": "application/x-www-form-urlencoded",
            "Content-Length": "1101",
            "Host": "ant.xunsl.com",
            "Connection": "Keep-Alive",
            "Accept-Encoding": "gzip",
            "User-Agent": "okhttp/3.12.2"
            },
            body: articlebody
        };
        $.post(url, (error, response, data) => {
           let readres = JSON.parse(data);
             console.log(data)
           if (readres.error_code == '0' && typeof readres.items.read_score === 'number') {
              console.log(`\n本次阅读获得${readres.items.read_score}个青豆，即将开始下次阅读\n`)
              readscore += readres.items.read_score
            }
            else if (readres.error_code == '0' && typeof readres.items.score === 'number') {
              console.log(`\n本次阅读获得${readres.items.score}个青豆，即将开始下次阅读\n`)
              readscore += readres.items.score
            }
            else if (readres.success == false){
              console.log(`第${$.index}次阅读请求有误，请删除此请求`)
            }
            else if (readres.items.max_notice == '\u770b\u592a\u4e45\u4e86\uff0c\u63621\u7bc7\u8bd5\u8bd5') {     
              console.log(readres.items.max_notice)
            }
          resolve()
        })
      },s)
    })
}

function Env(t,e){class s{constructor(t){this.env=t}send(t,e="GET"){t="string"==typeof t?{url:t}:t;let s=this.get;return"POST"===e&&(s=this.post),new Promise((e,i)=>{s.call(this,t,(t,s,r)=>{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,"POST")}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile="box.dat",this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator="\n",this.startTime=(new Date).getTime(),Object.assign(this,e),this.log("",`\ud83d\udd14${this.name}, \u5f00\u59cb!`)}isNode(){return"undefined"!=typeof module&&!!module.exports}isQuanX(){return"undefined"!=typeof $task}isSurge(){return"undefined"!=typeof $httpClient&&"undefined"==typeof $loon}isLoon(){return"undefined"!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=>{this.get({url:t},(t,s,i)=>e(i))})}runScript(t,e){return new Promise(s=>{let i=this.getdata("@chavy_boxjs_userCfgs.httpapi");i=i?i.replace(/\n/g,"").trim():i;let r=this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout");r=r?1*r:20,r=e&&e.timeout?e.timeout:r;const[o,h]=i.split("@"),a={url:`http://${h}/v1/scripting/evaluate`,body:{script_text:t,mock_type:"cron",timeout:r},headers:{"X-Key":o,Accept:"*/*"}};this.post(a,(t,e,i)=>s(i))}).catch(t=>this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e);if(!s&&!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\[(\d+)\]/g,".$1").split(".");let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=>Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])>>0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\.(.*?)$/.exec(t),r=s?this.getval(s):"";if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,""):e}catch(t){e=""}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\.(.*?)$/.exec(e),o=this.getval(i),h=i?"null"===o?null:o||"{}":"{}";try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&&this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&&this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require("got"),this.cktough=this.cktough?this.cktough:require("tough-cookie"),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&&(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&&void 0===t.cookieJar&&(t.cookieJar=this.ckjar))}get(t,e=(()=>{})){t.headers&&(delete t.headers["Content-Type"],delete t.headers["Content-Length"]),this.isSurge()||this.isLoon()?(this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.get(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t))):this.isNode()&&(this.initGotEnv(t),this.got(t).on("redirect",(t,e)=>{try{if(t.headers["set-cookie"]){const s=t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)}))}post(t,e=(()=>{})){if(t.body&&t.headers&&!t.headers["Content-Type"]&&(t.headers["Content-Type"]="application/x-www-form-urlencoded"),t.headers&&delete t.headers["Content-Length"],this.isSurge()||this.isLoon())this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.post(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method="POST",this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)})}}time(t){let e={"M+":(new Date).getMonth()+1,"d+":(new Date).getDate(),"H+":(new Date).getHours(),"m+":(new Date).getMinutes(),"s+":(new Date).getSeconds(),"q+":Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,((new Date).getFullYear()+"").substr(4-RegExp.$1.length)));for(let s in e)new RegExp("("+s+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:("00"+e[s]).substr((""+e[s]).length)));return t}msg(e=t,s="",i="",r){const o=t=>{if(!t)return t;if("string"==typeof t)return this.isLoon()?t:this.isQuanX()?{"open-url":t}:this.isSurge()?{url:t}:void 0;if("object"==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t["open-url"],s=t.mediaUrl||t["media-url"];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t["open-url"]||t.url||t.openUrl,s=t["media-url"]||t.mediaUrl;return{"open-url":e,"media-url":s}}if(this.isSurge()){let e=t.url||t.openUrl||t["open-url"];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&&$notify(e,s,i,o(r)));let h=["","==============\ud83d\udce3\u7cfb\u7edf\u901a\u77e5\ud83d\udce3=============="];h.push(e),s&&h.push(s),i&&h.push(i),console.log(h.join("\n")),this.logs=this.logs.concat(h)}log(...t){t.length>0&&(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&&!this.isQuanX()&&!this.isLoon();s?this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t.stack):this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t)}wait(t){return new Promise(e=>setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log("",`\ud83d\udd14${this.name}, \u7ed3\u675f! \ud83d\udd5b ${s} \u79d2`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&&$done(t)}}(t,e)}
